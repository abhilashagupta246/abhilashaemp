/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.awt.Font;
import java.awt.List;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Ashraf Hameed
 */
public class Home extends javax.swing.JFrame {

    Connection con;
    Statement stmt;
    ResultSet rs;
    PreparedStatement pst;
    PreparedStatement pstchild;
    String nm = null;
    String subject = null;
    String selectedlesson = null;
    String selectedUserid = null;
    String selectedQuestionId = null;
    int rowcount = 0;
    Boolean login = false;
    String userLoginName = "";
    String EMAIL_PATTERN = "";
    Boolean userEmailCheck = false;

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        con = mysqlconnect.ConnectDb();
        Populate_Subject();
        Populate_Users();
        closeAllFrames();
        disableMenus();
        UserLoginFrame.setLocation(250, 200);
        UserLoginFrame.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        desktopPane = new javax.swing.JDesktopPane();
        LessonsFrame = new javax.swing.JInternalFrame();
        Ls_Label = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Ls_Table = new javax.swing.JTable();
        Ls_Add_Btn = new javax.swing.JButton();
        Ls_Delete_Btn = new javax.swing.JButton();
        Ls_Enter_Btn = new javax.swing.JButton();
        Ls_Back_Btn = new javax.swing.JButton();
        Ls_Marks_Btn = new javax.swing.JButton();
        AddLessonFrame = new javax.swing.JInternalFrame();
        AddLs_Name_Label = new javax.swing.JLabel();
        AddLs_Submit_Btn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        AddLs_Name_TextArea = new javax.swing.JTextArea();
        AddLs_Content_Label = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        AddLs_Content_TextArea = new javax.swing.JTextArea();
        AddLs_Label = new javax.swing.JLabel();
        AddLs_Back_Btn = new javax.swing.JButton();
        LessonsContentFrame = new javax.swing.JInternalFrame();
        LsContent_TextArea = new javax.swing.JTextArea();
        LsContent_Update_Btn = new javax.swing.JButton();
        LsContent_label = new javax.swing.JLabel();
        LsContent_Questions_Btn = new javax.swing.JButton();
        Ls_Content_Back_Btn = new javax.swing.JButton();
        SubjectFrame = new javax.swing.JInternalFrame();
        Sub_Label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Sub_Table = new javax.swing.JTable();
        Sub_Add_Btn = new javax.swing.JButton();
        Sub_Delete_Btn = new javax.swing.JButton();
        Sub_Enter_Btn = new javax.swing.JButton();
        AddSubjectFrame = new javax.swing.JInternalFrame();
        AddSub_Name_Label = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        AddSub_Name_Textarea = new javax.swing.JTextArea();
        AddSub_Add_Btn = new javax.swing.JButton();
        AddSub_Label = new javax.swing.JLabel();
        UserManagementFrame = new javax.swing.JInternalFrame();
        UsMng_label = new javax.swing.JLabel();
        UsMng_Name_Textfield = new javax.swing.JTextField();
        UsMng_Email_Textfield = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        User_Table = new javax.swing.JTable();
        UsMng_Add_Btn = new javax.swing.JButton();
        UsMng_Delete_Btn = new javax.swing.JButton();
        UsMng_Update_Btn = new javax.swing.JButton();
        UsMng_Name_Label = new javax.swing.JLabel();
        UsMng_Email_Label = new javax.swing.JLabel();
        UsMng_Password_Label = new javax.swing.JLabel();
        UsMng_Password_Textfield = new javax.swing.JTextField();
        QuestionsFrame = new javax.swing.JInternalFrame();
        Qst_Label = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        Qst_Table = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        Qst_Textarea = new javax.swing.JTextArea();
        Qst_Opt1_Textfield = new javax.swing.JTextField();
        Qst_Opt2_Textfield = new javax.swing.JTextField();
        Qst_Opt3_Textfield = new javax.swing.JTextField();
        Qst_Update_Btn = new javax.swing.JButton();
        Qst_Opt1_Btn = new javax.swing.JRadioButton();
        Qst_Opt2_Btn = new javax.swing.JRadioButton();
        Qst_Opt3_Btn = new javax.swing.JRadioButton();
        Qst_Add_Btn = new javax.swing.JButton();
        Qst_Back_Btn = new javax.swing.JButton();
        Qst_Delete_Btn = new javax.swing.JButton();
        UserLoginFrame = new javax.swing.JInternalFrame();
        UserLogin_Label = new javax.swing.JLabel();
        UserLogin_Name_Label = new javax.swing.JLabel();
        UserLogin_Password_Label = new javax.swing.JLabel();
        UserLogin_Login_Btn = new javax.swing.JButton();
        UserLogin_Name_Textfield = new javax.swing.JTextField();
        UserLogin_ForgetPwd_Btn = new javax.swing.JButton();
        UserLogin_Password_Textfield = new javax.swing.JTextField();
        ChangePasswordFrame = new javax.swing.JInternalFrame();
        ChangePwd_Label = new javax.swing.JLabel();
        ChangePwd_NewPwd_Label = new javax.swing.JLabel();
        ChangePwd_ConfPwd_Label = new javax.swing.JLabel();
        ChangePwd_NewPwd_Textfield = new javax.swing.JTextField();
        ChangePwd_ConfPwd_Textfield = new javax.swing.JTextField();
        ChangePwd_Submit_Btn = new javax.swing.JButton();
        StudentManagementFrame = new javax.swing.JInternalFrame();
        StDetails_Label = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        St_Table = new javax.swing.JTable();
        StDetails_Back_Btn = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        subject_menu = new javax.swing.JMenu();
        userMngtMenu = new javax.swing.JMenu();
        changePwd = new javax.swing.JMenu();
        logoutMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LessonsFrame.setPreferredSize(new java.awt.Dimension(600, 400));
        LessonsFrame.setVisible(true);

        Ls_Label.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Ls_Label.setText("Lessons");

        Ls_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Sl.No.", "Lesson"
            }
        ));
        Ls_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Ls_TableMouseClicked(evt);
            }
        });
        Ls_Table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Ls_TableKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(Ls_Table);

        Ls_Add_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Ls_Add_Btn.setText("Add");
        Ls_Add_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ls_Add_BtnActionPerformed(evt);
            }
        });

        Ls_Delete_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Ls_Delete_Btn.setText("Delete");
        Ls_Delete_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ls_Delete_BtnActionPerformed(evt);
            }
        });

        Ls_Enter_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Ls_Enter_Btn.setText("Enter");
        Ls_Enter_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ls_Enter_BtnActionPerformed(evt);
            }
        });

        Ls_Back_Btn.setText("Back");
        Ls_Back_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ls_Back_BtnActionPerformed(evt);
            }
        });

        Ls_Marks_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Ls_Marks_Btn.setText("Students Marks");
        Ls_Marks_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ls_Marks_BtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LessonsFrameLayout = new javax.swing.GroupLayout(LessonsFrame.getContentPane());
        LessonsFrame.getContentPane().setLayout(LessonsFrameLayout);
        LessonsFrameLayout.setHorizontalGroup(
            LessonsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LessonsFrameLayout.createSequentialGroup()
                .addGroup(LessonsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LessonsFrameLayout.createSequentialGroup()
                        .addComponent(Ls_Back_Btn)
                        .addGap(161, 161, 161)
                        .addComponent(Ls_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(LessonsFrameLayout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(LessonsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(LessonsFrameLayout.createSequentialGroup()
                                .addComponent(Ls_Add_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addGroup(LessonsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Ls_Marks_Btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Ls_Delete_Btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(45, 45, 45)
                                .addComponent(Ls_Enter_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        LessonsFrameLayout.setVerticalGroup(
            LessonsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LessonsFrameLayout.createSequentialGroup()
                .addGroup(LessonsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ls_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ls_Back_Btn))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(LessonsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ls_Enter_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ls_Delete_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ls_Add_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Ls_Marks_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        desktopPane.add(LessonsFrame);
        LessonsFrame.setBounds(0, 0, 600, 400);

        AddLessonFrame.setBackground(new java.awt.Color(204, 204, 204));
        AddLessonFrame.setPreferredSize(new java.awt.Dimension(500, 400));
        AddLessonFrame.setVisible(true);

        AddLs_Name_Label.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        AddLs_Name_Label.setText("Lesson Name");

        AddLs_Submit_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        AddLs_Submit_Btn.setText("Submit");
        AddLs_Submit_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddLs_Submit_BtnActionPerformed(evt);
            }
        });

        AddLs_Name_TextArea.setColumns(20);
        AddLs_Name_TextArea.setRows(5);
        jScrollPane4.setViewportView(AddLs_Name_TextArea);

        AddLs_Content_Label.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        AddLs_Content_Label.setText("Lesson Content");

        AddLs_Content_TextArea.setColumns(20);
        AddLs_Content_TextArea.setRows(5);
        jScrollPane5.setViewportView(AddLs_Content_TextArea);

        AddLs_Label.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        AddLs_Label.setText("Add Lesson");

        AddLs_Back_Btn.setText("Back");
        AddLs_Back_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddLs_Back_BtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddLessonFrameLayout = new javax.swing.GroupLayout(AddLessonFrame.getContentPane());
        AddLessonFrame.getContentPane().setLayout(AddLessonFrameLayout);
        AddLessonFrameLayout.setHorizontalGroup(
            AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddLessonFrameLayout.createSequentialGroup()
                .addGroup(AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddLessonFrameLayout.createSequentialGroup()
                        .addComponent(AddLs_Back_Btn)
                        .addGap(84, 84, 84)
                        .addComponent(AddLs_Label))
                    .addGroup(AddLessonFrameLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddLs_Content_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddLs_Name_Label))
                        .addGap(37, 37, 37)
                        .addGroup(AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddLs_Submit_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                                .addComponent(jScrollPane4)))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        AddLessonFrameLayout.setVerticalGroup(
            AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddLessonFrameLayout.createSequentialGroup()
                .addGroup(AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddLs_Label)
                    .addComponent(AddLs_Back_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddLessonFrameLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddLessonFrameLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(AddLs_Name_Label)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddLessonFrameLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(AddLs_Submit_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddLessonFrameLayout.createSequentialGroup()
                        .addComponent(AddLs_Content_Label)
                        .addGap(107, 107, 107))))
        );

        desktopPane.add(AddLessonFrame);
        AddLessonFrame.setBounds(0, 0, 500, 400);

        LessonsContentFrame.setPreferredSize(new java.awt.Dimension(600, 400));
        LessonsContentFrame.setVisible(true);

        LsContent_TextArea.setColumns(20);
        LsContent_TextArea.setRows(5);

        LsContent_Update_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        LsContent_Update_Btn.setText("Update");
        LsContent_Update_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LsContent_Update_BtnActionPerformed(evt);
            }
        });

        LsContent_label.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        LsContent_label.setText("jLabel5");

        LsContent_Questions_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        LsContent_Questions_Btn.setText("Questions");
        LsContent_Questions_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LsContent_Questions_BtnActionPerformed(evt);
            }
        });

        Ls_Content_Back_Btn.setText("Back");
        Ls_Content_Back_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ls_Content_Back_BtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LessonsContentFrameLayout = new javax.swing.GroupLayout(LessonsContentFrame.getContentPane());
        LessonsContentFrame.getContentPane().setLayout(LessonsContentFrameLayout);
        LessonsContentFrameLayout.setHorizontalGroup(
            LessonsContentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LessonsContentFrameLayout.createSequentialGroup()
                .addGroup(LessonsContentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LessonsContentFrameLayout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(LsContent_label))
                    .addGroup(LessonsContentFrameLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(LsContent_TextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(LessonsContentFrameLayout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addGroup(LessonsContentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LsContent_Update_Btn, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(LsContent_Questions_Btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(LessonsContentFrameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Ls_Content_Back_Btn)))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        LessonsContentFrameLayout.setVerticalGroup(
            LessonsContentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LessonsContentFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Ls_Content_Back_Btn)
                .addGap(21, 21, 21)
                .addComponent(LsContent_label)
                .addGap(26, 26, 26)
                .addComponent(LsContent_TextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LsContent_Update_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LsContent_Questions_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        desktopPane.add(LessonsContentFrame);
        LessonsContentFrame.setBounds(0, 0, 600, 400);

        SubjectFrame.setNormalBounds(new java.awt.Rectangle(0, 0, 800, 550));
        SubjectFrame.setPreferredSize(new java.awt.Dimension(800, 600));
        SubjectFrame.setVisible(true);

        Sub_Label.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Sub_Label.setText("Subjects");

        Sub_Table.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Sub_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S. no.", "Subject Name"
            }
        ));
        Sub_Table.setNextFocusableComponent(Sub_Add_Btn);
        Sub_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Sub_TableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Sub_TableMousePressed(evt);
            }
        });
        Sub_Table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Sub_TableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Sub_Table);

        Sub_Add_Btn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Sub_Add_Btn.setText("Add");
        Sub_Add_Btn.setMaximumSize(new java.awt.Dimension(75, 50));
        Sub_Add_Btn.setPreferredSize(new java.awt.Dimension(57, 23));
        Sub_Add_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sub_Add_BtnActionPerformed(evt);
            }
        });
        Sub_Add_Btn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Sub_Add_BtnKeyReleased(evt);
            }
        });

        Sub_Delete_Btn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Sub_Delete_Btn.setText("Delete");
        Sub_Delete_Btn.setPreferredSize(new java.awt.Dimension(73, 23));
        Sub_Delete_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sub_Delete_BtnActionPerformed(evt);
            }
        });
        Sub_Delete_Btn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Sub_Delete_BtnKeyReleased(evt);
            }
        });

        Sub_Enter_Btn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Sub_Enter_Btn.setText("Enter");
        Sub_Enter_Btn.setPreferredSize(new java.awt.Dimension(67, 23));
        Sub_Enter_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sub_Enter_BtnActionPerformed(evt);
            }
        });
        Sub_Enter_Btn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Sub_Enter_BtnKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout SubjectFrameLayout = new javax.swing.GroupLayout(SubjectFrame.getContentPane());
        SubjectFrame.getContentPane().setLayout(SubjectFrameLayout);
        SubjectFrameLayout.setHorizontalGroup(
            SubjectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubjectFrameLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(SubjectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(SubjectFrameLayout.createSequentialGroup()
                        .addComponent(Sub_Add_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(Sub_Delete_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Sub_Enter_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(101, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SubjectFrameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Sub_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(335, 335, 335))
        );
        SubjectFrameLayout.setVerticalGroup(
            SubjectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubjectFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Sub_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(SubjectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Sub_Enter_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sub_Delete_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sub_Add_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        desktopPane.add(SubjectFrame);
        SubjectFrame.setBounds(0, 0, 800, 600);

        AddSubjectFrame.setPreferredSize(new java.awt.Dimension(500, 300));
        AddSubjectFrame.setVisible(true);

        AddSub_Name_Label.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        AddSub_Name_Label.setText("Subject Name");

        AddSub_Name_Textarea.setColumns(20);
        AddSub_Name_Textarea.setRows(5);
        AddSub_Name_Textarea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                AddSub_Name_TextareaKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(AddSub_Name_Textarea);

        AddSub_Add_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        AddSub_Add_Btn.setText("Add");
        AddSub_Add_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddSub_Add_BtnActionPerformed(evt);
            }
        });
        AddSub_Add_Btn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                AddSub_Add_BtnKeyReleased(evt);
            }
        });

        AddSub_Label.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        AddSub_Label.setText("Add Subject");

        javax.swing.GroupLayout AddSubjectFrameLayout = new javax.swing.GroupLayout(AddSubjectFrame.getContentPane());
        AddSubjectFrame.getContentPane().setLayout(AddSubjectFrameLayout);
        AddSubjectFrameLayout.setHorizontalGroup(
            AddSubjectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddSubjectFrameLayout.createSequentialGroup()
                .addGroup(AddSubjectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddSubjectFrameLayout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(AddSub_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddSubjectFrameLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(AddSub_Name_Label)
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddSubjectFrameLayout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(AddSub_Add_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        AddSubjectFrameLayout.setVerticalGroup(
            AddSubjectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddSubjectFrameLayout.createSequentialGroup()
                .addComponent(AddSub_Label)
                .addGroup(AddSubjectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddSubjectFrameLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(AddSub_Add_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(AddSubjectFrameLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(AddSub_Name_Label)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        desktopPane.add(AddSubjectFrame);
        AddSubjectFrame.setBounds(0, 0, 500, 300);

        UserManagementFrame.setPreferredSize(new java.awt.Dimension(700, 500));
        UserManagementFrame.setVisible(true);

        UsMng_label.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        UsMng_label.setText("User Management");

        User_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "User name", "Email Address", "Password"
            }
        ));
        User_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                User_TableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                User_TableMousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(User_Table);

        UsMng_Add_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        UsMng_Add_Btn.setText("Add");
        UsMng_Add_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsMng_Add_BtnActionPerformed(evt);
            }
        });

        UsMng_Delete_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        UsMng_Delete_Btn.setText("Delete");
        UsMng_Delete_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsMng_Delete_BtnActionPerformed(evt);
            }
        });

        UsMng_Update_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        UsMng_Update_Btn.setText("Update");
        UsMng_Update_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsMng_Update_BtnActionPerformed(evt);
            }
        });

        UsMng_Name_Label.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        UsMng_Name_Label.setText("User Name");

        UsMng_Email_Label.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        UsMng_Email_Label.setText("Email");

        UsMng_Password_Label.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        UsMng_Password_Label.setText("Password");

        javax.swing.GroupLayout UserManagementFrameLayout = new javax.swing.GroupLayout(UserManagementFrame.getContentPane());
        UserManagementFrame.getContentPane().setLayout(UserManagementFrameLayout);
        UserManagementFrameLayout.setHorizontalGroup(
            UserManagementFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserManagementFrameLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(UserManagementFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(UserManagementFrameLayout.createSequentialGroup()
                        .addComponent(UsMng_Name_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UsMng_Name_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UsMng_Email_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UsMng_Email_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(UsMng_Password_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UsMng_Password_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(UserManagementFrameLayout.createSequentialGroup()
                        .addComponent(UsMng_Add_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(162, 162, 162)
                        .addComponent(UsMng_Delete_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(UsMng_Update_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(UserManagementFrameLayout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(UsMng_label))
        );
        UserManagementFrameLayout.setVerticalGroup(
            UserManagementFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserManagementFrameLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(UsMng_label)
                .addGap(56, 56, 56)
                .addGroup(UserManagementFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UsMng_Email_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UsMng_Name_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UsMng_Name_Label)
                    .addComponent(UsMng_Email_Label)
                    .addComponent(UsMng_Password_Label)
                    .addComponent(UsMng_Password_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101)
                .addGroup(UserManagementFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UsMng_Add_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UsMng_Delete_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UsMng_Update_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        desktopPane.add(UserManagementFrame);
        UserManagementFrame.setBounds(0, 0, 700, 500);

        QuestionsFrame.setPreferredSize(new java.awt.Dimension(800, 600));
        QuestionsFrame.setVisible(true);

        Qst_Label.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Qst_Label.setText("Questions");

        Qst_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Question id", "Lesson Id", "Question", "opt 1", "opt 2", "opt 3", "Answer"
            }
        ));
        Qst_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Qst_TableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(Qst_Table);

        Qst_Textarea.setColumns(20);
        Qst_Textarea.setRows(5);
        jScrollPane8.setViewportView(Qst_Textarea);

        Qst_Update_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Qst_Update_Btn.setText("Update");
        Qst_Update_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Qst_Update_BtnActionPerformed(evt);
            }
        });

        buttonGroup1.add(Qst_Opt1_Btn);

        buttonGroup1.add(Qst_Opt2_Btn);
        Qst_Opt2_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Qst_Opt2_BtnActionPerformed(evt);
            }
        });

        buttonGroup1.add(Qst_Opt3_Btn);

        Qst_Add_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Qst_Add_Btn.setText("Add");
        Qst_Add_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Qst_Add_BtnActionPerformed(evt);
            }
        });

        Qst_Back_Btn.setText("Back");
        Qst_Back_Btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Qst_Back_BtnMouseClicked(evt);
            }
        });
        Qst_Back_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Qst_Back_BtnActionPerformed(evt);
            }
        });

        Qst_Delete_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Qst_Delete_Btn.setText("Delete");
        Qst_Delete_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Qst_Delete_BtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout QuestionsFrameLayout = new javax.swing.GroupLayout(QuestionsFrame.getContentPane());
        QuestionsFrame.getContentPane().setLayout(QuestionsFrameLayout);
        QuestionsFrameLayout.setHorizontalGroup(
            QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuestionsFrameLayout.createSequentialGroup()
                .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(QuestionsFrameLayout.createSequentialGroup()
                        .addComponent(Qst_Back_Btn)
                        .addGap(261, 261, 261)
                        .addComponent(Qst_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(QuestionsFrameLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(QuestionsFrameLayout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Qst_Opt1_Btn)
                            .addComponent(Qst_Opt3_Btn)
                            .addComponent(Qst_Opt2_Btn))
                        .addGap(18, 18, 18)
                        .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Qst_Opt2_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Qst_Opt3_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Qst_Opt1_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(QuestionsFrameLayout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(QuestionsFrameLayout.createSequentialGroup()
                                .addComponent(Qst_Update_Btn)
                                .addGap(76, 76, 76)
                                .addComponent(Qst_Add_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(Qst_Delete_Btn))
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        QuestionsFrameLayout.setVerticalGroup(
            QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuestionsFrameLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Qst_Back_Btn)
                    .addComponent(Qst_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Qst_Opt1_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Qst_Opt1_Btn))
                .addGap(25, 25, 25)
                .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Qst_Opt2_Textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Qst_Opt2_Btn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(27, 27, 27)
                .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Qst_Opt3_Btn)
                    .addComponent(Qst_Opt3_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Qst_Update_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Qst_Add_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Qst_Delete_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        desktopPane.add(QuestionsFrame);
        QuestionsFrame.setBounds(0, 0, 800, 600);

        UserLoginFrame.setVisible(true);

        UserLogin_Label.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        UserLogin_Label.setText("User Login");

        UserLogin_Name_Label.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        UserLogin_Name_Label.setText("User Name");

        UserLogin_Password_Label.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        UserLogin_Password_Label.setText("Password");

        UserLogin_Login_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        UserLogin_Login_Btn.setText("Login");
        UserLogin_Login_Btn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        UserLogin_Login_Btn.setNextFocusableComponent(subject_menu);
        UserLogin_Login_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserLogin_Login_BtnActionPerformed(evt);
            }
        });
        UserLogin_Login_Btn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                UserLogin_Login_BtnKeyReleased(evt);
            }
        });

        UserLogin_ForgetPwd_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        UserLogin_ForgetPwd_Btn.setText("Forget Password");
        UserLogin_ForgetPwd_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserLogin_ForgetPwd_BtnActionPerformed(evt);
            }
        });
        UserLogin_ForgetPwd_Btn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                UserLogin_ForgetPwd_BtnKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout UserLoginFrameLayout = new javax.swing.GroupLayout(UserLoginFrame.getContentPane());
        UserLoginFrame.getContentPane().setLayout(UserLoginFrameLayout);
        UserLoginFrameLayout.setHorizontalGroup(
            UserLoginFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserLoginFrameLayout.createSequentialGroup()
                .addGroup(UserLoginFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UserLoginFrameLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addGroup(UserLoginFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UserLogin_Name_Label)
                            .addComponent(UserLogin_Password_Label))
                        .addGap(72, 72, 72)
                        .addGroup(UserLoginFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(UserLoginFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(UserLogin_Name_Textfield)
                                .addComponent(UserLogin_Password_Textfield, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                            .addComponent(UserLogin_ForgetPwd_Btn)
                            .addComponent(UserLogin_Login_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(UserLoginFrameLayout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(UserLogin_Label)))
                .addContainerGap(185, Short.MAX_VALUE))
        );
        UserLoginFrameLayout.setVerticalGroup(
            UserLoginFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserLoginFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(UserLogin_Label)
                .addGap(41, 41, 41)
                .addGroup(UserLoginFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserLogin_Name_Label)
                    .addComponent(UserLogin_Name_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(UserLoginFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserLogin_Password_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UserLogin_Password_Label))
                .addGap(34, 34, 34)
                .addComponent(UserLogin_Login_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UserLogin_ForgetPwd_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        desktopPane.add(UserLoginFrame);
        UserLoginFrame.setBounds(0, 0, 620, 330);

        ChangePasswordFrame.setPreferredSize(new java.awt.Dimension(500, 300));
        ChangePasswordFrame.setVisible(true);

        ChangePwd_Label.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ChangePwd_Label.setText("Change Password");

        ChangePwd_NewPwd_Label.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ChangePwd_NewPwd_Label.setText("New Password");

        ChangePwd_ConfPwd_Label.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ChangePwd_ConfPwd_Label.setText("Confirm Password");

        ChangePwd_Submit_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ChangePwd_Submit_Btn.setText("Submit");
        ChangePwd_Submit_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangePwd_Submit_BtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ChangePasswordFrameLayout = new javax.swing.GroupLayout(ChangePasswordFrame.getContentPane());
        ChangePasswordFrame.getContentPane().setLayout(ChangePasswordFrameLayout);
        ChangePasswordFrameLayout.setHorizontalGroup(
            ChangePasswordFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChangePasswordFrameLayout.createSequentialGroup()
                .addGroup(ChangePasswordFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ChangePasswordFrameLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(ChangePwd_Label))
                    .addGroup(ChangePasswordFrameLayout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(ChangePasswordFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(ChangePasswordFrameLayout.createSequentialGroup()
                                .addComponent(ChangePwd_NewPwd_Label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ChangePwd_NewPwd_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ChangePasswordFrameLayout.createSequentialGroup()
                                .addComponent(ChangePwd_ConfPwd_Label)
                                .addGap(75, 75, 75)
                                .addComponent(ChangePwd_ConfPwd_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(ChangePasswordFrameLayout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(ChangePwd_Submit_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(270, 270, 270))
        );
        ChangePasswordFrameLayout.setVerticalGroup(
            ChangePasswordFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChangePasswordFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ChangePwd_Label)
                .addGap(35, 35, 35)
                .addGroup(ChangePasswordFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ChangePwd_NewPwd_Label)
                    .addComponent(ChangePwd_NewPwd_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(ChangePasswordFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChangePwd_ConfPwd_Label)
                    .addComponent(ChangePwd_ConfPwd_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(ChangePwd_Submit_Btn)
                .addGap(56, 56, 56))
        );

        desktopPane.add(ChangePasswordFrame);
        ChangePasswordFrame.setBounds(0, 0, 500, 300);

        StudentManagementFrame.setVisible(true);

        StDetails_Label.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        StDetails_Label.setText("Students Details");

        St_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane9.setViewportView(St_Table);

        StDetails_Back_Btn.setText("Back");
        StDetails_Back_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StDetails_Back_BtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout StudentManagementFrameLayout = new javax.swing.GroupLayout(StudentManagementFrame.getContentPane());
        StudentManagementFrame.getContentPane().setLayout(StudentManagementFrameLayout);
        StudentManagementFrameLayout.setHorizontalGroup(
            StudentManagementFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StudentManagementFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StudentManagementFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StudentManagementFrameLayout.createSequentialGroup()
                        .addComponent(StDetails_Back_Btn)
                        .addGap(129, 129, 129)
                        .addComponent(StDetails_Label)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE))
                .addContainerGap())
        );
        StudentManagementFrameLayout.setVerticalGroup(
            StudentManagementFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StudentManagementFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StudentManagementFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StDetails_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StDetails_Back_Btn))
                .addGap(54, 54, 54)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        desktopPane.add(StudentManagementFrame);
        StudentManagementFrame.setBounds(0, 0, 683, 400);

        subject_menu.setMnemonic('f');
        subject_menu.setText("Subject");
        subject_menu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        subject_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subject_menuMouseClicked(evt);
            }
        });
        subject_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subject_menuActionPerformed(evt);
            }
        });
        subject_menu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                subject_menuKeyReleased(evt);
            }
        });
        menuBar.add(subject_menu);

        userMngtMenu.setMnemonic('e');
        userMngtMenu.setText("User Management");
        userMngtMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userMngtMenuMouseClicked(evt);
            }
        });
        menuBar.add(userMngtMenu);

        changePwd.setText("Change Password");
        changePwd.setPreferredSize(new java.awt.Dimension(130, 19));
        changePwd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changePwdMouseClicked(evt);
            }
        });
        changePwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePwdActionPerformed(evt);
            }
        });
        menuBar.add(changePwd);

        logoutMenu.setText("Logout");
        logoutMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMenuMouseClicked(evt);
            }
        });
        menuBar.add(logoutMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1253, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Populate_Subject() {
        try {
            pst = con.prepareStatement("select subject_id as Id,subject_no as 'S No' ,subject_name as Subject from subjects");
            rs = pst.executeQuery();
            Sub_Table.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 12));
            Sub_Table.setModel(DbUtils.resultSetToTableModel(rs));
            Sub_Table.getColumnModel().getColumn(0).setMinWidth(0);
            Sub_Table.getColumnModel().getColumn(0).setMaxWidth(0);
        } catch (SQLException e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void Populate_Lessons() {
        try {
            pst = con.prepareStatement("select lesson_id as Id,lesson_no as 'S No' ,lesson_name as Lessons from lessons where subject_id=" + subject);
            rs = pst.executeQuery();
            Ls_Table.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 12));
            Ls_Table.setModel(DbUtils.resultSetToTableModel(rs));
            Ls_Table.getColumnModel().getColumn(0).setMinWidth(0);
            Ls_Table.getColumnModel().getColumn(0).setMaxWidth(0);
        } catch (SQLException e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void Populate_Students() {
        try {

            pst = con.prepareStatement("select st.student_name as 'Student Name' ,sub.subject_name as Subject, ls.lesson_name as Lesson ,stdt.marks as 'Marks Optained' from studentmarkdetails stdt INNER JOIN students st ON stdt.student_id=st.student_id INNER JOIN subjects sub ON stdt.subject_id=sub.subject_id INNER JOIN lessons ls ON stdt.lesson_id=ls.lesson_id where stdt.subject_id=" + subject + " and stdt.lesson_id=" + selectedlesson);
            rs = pst.executeQuery();
            St_Table.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 12));
            St_Table.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void updateSubjectIndex() {
        String str = "Select * from subjects";
        String index = "";
        int i = 1;
        try {
            pst = con.prepareStatement(str);
            rs = pst.executeQuery();
            while (rs.next()) {
                index = rs.getString("subject_id");
                pstchild = con.prepareStatement("Update subjects set subject_no=" + i + " where subject_id=" + index);
                pstchild.executeUpdate();
                i++;
            }
        } catch (Exception e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void updateLessonIndex() {
        String str = "Select * from lessons where subject_id=" + subject;
        String index = "";
        int i = 1;
        try {
            pst = con.prepareStatement(str);
            rs = pst.executeQuery();
            while (rs.next()) {
                index = rs.getString("lesson_id");
                pstchild = con.prepareStatement("Update lessons set lesson_no=" + i + " where lesson_id=" + index);
                pstchild.executeUpdate();
                i++;
            }
        } catch (Exception e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void updateQuestionsIndex() {
        String str = "Select * from questions where lesson_id=" + selectedlesson;
        String index = "";
        int i = 1;
        try {
            pst = con.prepareStatement(str);
            rs = pst.executeQuery();
            while (rs.next()) {
                index = rs.getString("id");
                pstchild = con.prepareStatement("Update questions set question_no=" + i + " where id=" + index);
                pstchild.executeUpdate();
                i++;
            }
        } catch (Exception e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void updateUsersIndex() {
        String str = "Select * from users";
        String index = "";
        int i = 1;
        try {
            pst = con.prepareStatement(str);
            rs = pst.executeQuery();
            while (rs.next()) {
                index = rs.getString("user_id");
                pstchild = con.prepareStatement("Update users set user_no=" + i + " where user_id=" + index);
                pstchild.executeUpdate();
                i++;
            }
        } catch (Exception e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private Boolean userCheck(String emailCheck) {
        userEmailCheck = false;
        ArrayList<String> emailList = new ArrayList<String>();
        String str = "Select user_email from users";

        try {
            pst = con.prepareStatement(str);
            rs = pst.executeQuery();
            while (rs.next()) {
                int i = 1;
                emailList.add(rs.getString(i++));
            }
            for (int a = 1; a < emailList.size(); a++) {
                if (emailCheck.equalsIgnoreCase(emailList.get(a))) {
                    userEmailCheck = true;
                }

            }
        } catch (Exception e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
        return userEmailCheck;
    }

    private void closeAllFrames() {
        SubjectFrame.setVisible(false);
        AddSubjectFrame.setVisible(false);
        LessonsFrame.setVisible(false);
        AddLessonFrame.setVisible(false);
        LessonsContentFrame.setVisible(false);
        UserManagementFrame.setVisible(false);
        QuestionsFrame.setVisible(false);
        UserLoginFrame.setVisible(false);
        ChangePasswordFrame.setVisible(false);
        StudentManagementFrame.setVisible(false);
    }

    private void disableMenus() {
        subject_menu.setEnabled(false);
        userMngtMenu.setEnabled(false);
        changePwd.setEnabled(false);
        logoutMenu.setEnabled(false);
        //studentsDetail.setEnabled(false);
    }

    private void Populate_Users() {
        try {
            pst = con.prepareStatement("select user_id as Id,user_no as 'S No',user_name as 'User Name', user_email as 'Email Id',user_password as Password from users");
            rs = pst.executeQuery();
            User_Table.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 12));
            User_Table.setModel(DbUtils.resultSetToTableModel(rs));
            User_Table.getColumnModel().getColumn(0).setMinWidth(0);
            User_Table.getColumnModel().getColumn(0).setMaxWidth(0);

        } catch (SQLException e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void Populate_Questions() {
        try {
            pst = con.prepareStatement("select id as Id,question_no as 'S No', question as Question, option1 as 'First Option', option2 as 'Second Option',option3 as 'Third Option',answer as Anwser from questions where lesson_id=" + selectedlesson);
            rs = pst.executeQuery();
            Qst_Table.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 12));
            Qst_Table.setModel(DbUtils.resultSetToTableModel(rs));
            Qst_Table.getColumnModel().getColumn(0).setMinWidth(0);
            Qst_Table.getColumnModel().getColumn(0).setMaxWidth(0);

        } catch (SQLException e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void Delete_Lesson(String selected) {
        List results = new List();
        String lessonquery = "";
        int i = 0;
        try {
            lessonquery = "select lesson_id from lessons where subject_id=" + selected;

            pst = con.prepareStatement(lessonquery);
            rs = pst.executeQuery(lessonquery);
            while (rs.next()) {
                results.add(rs.getString("lesson_id"));
                i++;
            }
            for (int a = 0; a < results.getItemCount(); a++) {
                Delete_Questions(results.getItem(a));
                pstchild = con.prepareStatement("delete from lessons where lesson_id=" + results.getItem(a));
                pstchild.executeUpdate();
            }
        } catch (Exception e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void Delete_Questions(String lessonStr) {
        List results = new List();
        String lessonquery = "";
        int j = 0;
        try {
            lessonquery = "select id from questions where lesson_id=" + lessonStr;

            pst = con.prepareStatement(lessonquery);
            rs = pst.executeQuery(lessonquery);
            while (rs.next()) {
                results.add(rs.getString("id"));
                j++;
            }
            for (int b = 0; b < results.getItemCount(); b++) {
                System.out.println("delete from questions where id=" + results.getItem(b));
                pstchild = con.prepareStatement("delete from questions where id=" + results.getItem(b));
                pstchild.executeUpdate();
            }
        } catch (Exception e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void Sub_Add_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sub_Add_BtnActionPerformed
        closeAllFrames();
        AddSubjectFrame.setVisible(true);
    }//GEN-LAST:event_Sub_Add_BtnActionPerformed

    private void subject_delete_fn() {
        int viewIndex = Sub_Table.getSelectedRow();
        rowcount = Sub_Table.getSelectedRowCount();
        if (rowcount > 1) {
            JOptionPane.showMessageDialog(null, "Please select a single subject to delete at a time", "Alert", JOptionPane.ERROR_MESSAGE);
        } else {

            DefaultTableModel model = (DefaultTableModel) Sub_Table.getModel();
            String selected = model.getValueAt(viewIndex, 0).toString();

            if (viewIndex != -1) {

                model.removeRow(viewIndex);
                try {
                    Delete_Lesson(selected);
                    pst = con.prepareStatement("delete from subjects where subject_id='" + selected + "' ");
                    pst.executeUpdate();
                    updateSubjectIndex();
                    Populate_Subject();
                } catch (Exception w) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, w);
                }

            }
        }
    }
    private void Sub_Delete_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sub_Delete_BtnActionPerformed
        subject_delete_fn();
    }//GEN-LAST:event_Sub_Delete_BtnActionPerformed

    private void AddSub_Add_Btn_fun()
    {
        if (!AddSub_Name_Textarea.getText().equalsIgnoreCase("")) {
            String insertsubject = "INSERT INTO Subjects(subject_name,subject_no) VALUES(?,?)";
            try {
                pst = con.prepareStatement(insertsubject);
                pst.setString(1, AddSub_Name_Textarea.getText());
                pst.setString(2, "0");
                pst.executeUpdate();

            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            AddSub_Name_Textarea.setText("");
            updateSubjectIndex();
            Populate_Subject();
            closeAllFrames();
            SubjectFrame.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(null, "Please enter a Subject", "Alert", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void AddSub_Add_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddSub_Add_BtnActionPerformed
        AddSub_Add_Btn_fun();
    }//GEN-LAST:event_AddSub_Add_BtnActionPerformed

    private void Sub_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Sub_TableMouseClicked
       if(Sub_Table.getSelectedRow()>0)
       {
        subject = Sub_Table.getModel().getValueAt(Sub_Table.getSelectedRow(), 0).toString();
       }
    }//GEN-LAST:event_Sub_TableMouseClicked

    private void Sub_Enter_Btn_fun()
    {
         String lessonsid = "";
        String lessonsname = "";
        rowcount = Sub_Table.getSelectedRowCount();
        if (rowcount > 1) {
            JOptionPane.showMessageDialog(null, "Please select a single subject at a time", "Alert", JOptionPane.ERROR_MESSAGE);
        } else {

            try {
                subject = Sub_Table.getModel().getValueAt(Sub_Table.getSelectedRow(), 0).toString();
                lessonsid = "select lesson_id  as Id,lesson_no as 'S No',lesson_name as Lesson from lessons where subject_id=" + subject;

                pst = con.prepareStatement(lessonsid);

                rs = pst.executeQuery(lessonsid);
                Ls_Table.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 12));
                Ls_Table.setModel(DbUtils.resultSetToTableModel(rs));
                Ls_Table.getColumnModel().getColumn(0).setMinWidth(0);
                Ls_Table.getColumnModel().getColumn(0).setMaxWidth(0);
                closeAllFrames();
                LessonsFrame.setVisible(true);

            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    private void Sub_Enter_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sub_Enter_BtnActionPerformed
       Sub_Enter_Btn_fun();
    }//GEN-LAST:event_Sub_Enter_BtnActionPerformed

    private void Ls_Enter_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ls_Enter_BtnActionPerformed
        String lessonscontent = "";
        rowcount = Ls_Table.getSelectedRowCount();
        if (rowcount > 1) {
            JOptionPane.showMessageDialog(null, "Please select a single lesson at a time", "Alert", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                selectedlesson = Ls_Table.getModel().getValueAt(Ls_Table.getSelectedRow(), 0).toString();

                lessonscontent = "select lesson_name,lesson_content from lessons where lesson_id=" + selectedlesson;

                pst = con.prepareStatement(lessonscontent);

                rs = pst.executeQuery(lessonscontent);

                while (rs.next()) {
                    LsContent_label.setText(rs.getString(1));
                    LsContent_TextArea.setText(rs.getString(2));
                }
                closeAllFrames();
                LessonsContentFrame.setVisible(true);

            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_Ls_Enter_BtnActionPerformed

    private void LsContent_Update_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LsContent_Update_BtnActionPerformed

        String updatelessoncontent = "Update lessons set lesson_content=? where lesson_id=" + selectedlesson;
        try {
            pst = con.prepareStatement(updatelessoncontent);
            pst.setString(1, LsContent_TextArea.getText());
            pst.executeUpdate();

        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        closeAllFrames();
        LessonsFrame.setVisible(true);

    }//GEN-LAST:event_LsContent_Update_BtnActionPerformed

    private void Ls_Delete_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ls_Delete_BtnActionPerformed

        int row = Ls_Table.getSelectedRow();
        rowcount = Ls_Table.getSelectedRowCount();
        if (rowcount > 1) {
            JOptionPane.showMessageDialog(null, "Please select a single lesson to delete at a time", "Alert", JOptionPane.ERROR_MESSAGE);
        } else {
            DefaultTableModel model = (DefaultTableModel) Ls_Table.getModel();

            String selected = model.getValueAt(row, 0).toString();

            if (row >= 0) {

                model.removeRow(row);

                try {
                    pst = con.prepareStatement("delete from lessons where lesson_id='" + selected + "' ");
                    pst.executeUpdate();
                    updateLessonIndex();
                    Populate_Lessons();
                } catch (Exception w) {
                    JOptionPane.showMessageDialog(this, "Connection Error!");
                }
            }
        }
    }//GEN-LAST:event_Ls_Delete_BtnActionPerformed

    private void Ls_Add_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ls_Add_BtnActionPerformed
        closeAllFrames();
        AddLessonFrame.setVisible(true);
    }//GEN-LAST:event_Ls_Add_BtnActionPerformed

    private void AddLs_Submit_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddLs_Submit_BtnActionPerformed
        String insertsubject = "INSERT INTO lessons( lesson_name,lesson_content,subject_id,lesson_no) VALUES(?,?,?,?)";
        if (!AddLs_Name_TextArea.getText().equalsIgnoreCase("") && !(AddLs_Content_TextArea.getText().equalsIgnoreCase(""))) {
            try {
                pst = con.prepareStatement(insertsubject);
                pst.setString(1, AddLs_Name_TextArea.getText());
                pst.setString(2, AddLs_Content_TextArea.getText());
                pst.setString(3, subject);
                pst.setString(4, "0");
                pst.executeUpdate();

            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            updateLessonIndex();
            Populate_Lessons();
            closeAllFrames();
            LessonsFrame.setVisible(true);
            AddLs_Name_TextArea.setText("");
            AddLs_Content_TextArea.setText("");

        } else {
            JOptionPane.showMessageDialog(null, "Please enter the lesson information", "Alert", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_AddLs_Submit_BtnActionPerformed

    private void UsMng_Delete_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsMng_Delete_BtnActionPerformed
        int row = User_Table.getSelectedRow();
        rowcount = User_Table.getSelectedRowCount();
        DefaultTableModel model = (DefaultTableModel) User_Table.getModel();

        String selected = model.getValueAt(row, 0).toString();
        if (rowcount > 1) {

            JOptionPane.showMessageDialog(null, "Please select single user to delete at a time", "Alert", JOptionPane.ERROR_MESSAGE);

        } else {
            if (row >= 0) {

                model.removeRow(row);

                try {
                    //Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/mydatabase", "root", "hey");
                    pst = con.prepareStatement("delete from users where user_id='" + selected + "' ");
                    pst.executeUpdate();
                } catch (Exception w) {
                    JOptionPane.showMessageDialog(this, "Connection Error!");
                }
            }
            UsMng_Name_Textfield.setText("");
            UsMng_Email_Textfield.setText("");
            UsMng_Password_Textfield.setText("");
            updateUsersIndex();
            Populate_Users();
        }
    }//GEN-LAST:event_UsMng_Delete_BtnActionPerformed

    private void User_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_User_TableMouseClicked
        int row = User_Table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) User_Table.getModel();

        selectedUserid = model.getValueAt(row, 0).toString();
        String selectedUsername = model.getValueAt(row, 1).toString();
        String selectedEmail = model.getValueAt(row, 2).toString();
        String selectedPassword = model.getValueAt(row, 3).toString();

        if (row >= 0) {
            UsMng_Name_Textfield.setText(selectedUsername);
            UsMng_Email_Textfield.setText(selectedEmail);
            UsMng_Password_Textfield.setText(selectedPassword);

        }

    }//GEN-LAST:event_User_TableMouseClicked

    private Boolean EmailValidator(String emailIdString) {
        Pattern patternString;
        Matcher matcherString;
        Boolean ValidEmailId = false;
        EMAIL_PATTERN = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@" + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";

        patternString = Pattern.compile(EMAIL_PATTERN);
        matcherString = patternString.matcher(emailIdString);

        if (!matcherString.matches()) {
            ValidEmailId = false;
        } else {
            ValidEmailId = true;
        }
        return ValidEmailId;
    }
    private void UsMng_Add_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsMng_Add_BtnActionPerformed

        if (!UsMng_Name_Textfield.getText().equalsIgnoreCase("") && !UsMng_Email_Textfield.getText().equalsIgnoreCase("") && !UsMng_Password_Textfield.getText().equalsIgnoreCase("")) {
            if (userCheck(UsMng_Email_Textfield.getText())) {
                JOptionPane.showMessageDialog(null, "Email Id already exist", "Alert", JOptionPane.ERROR_MESSAGE);
                UsMng_Email_Textfield.setText("");
            } else {
                String insertuser = "INSERT INTO users( user_name,user_email,user_password,user_no) VALUES(?,?,?,?)";
                try {

                    if (!EmailValidator(UsMng_Email_Textfield.getText().trim())) {
                        JOptionPane.showMessageDialog(null, "Please enter valid Email Id", "Alert", JOptionPane.ERROR_MESSAGE);
                        UsMng_Email_Textfield.setText("");
                    } else {
                        pst = con.prepareStatement(insertuser);
                        pst.setString(1, UsMng_Name_Textfield.getText());
                        pst.setString(2, UsMng_Email_Textfield.getText());
                        pst.setString(3, UsMng_Password_Textfield.getText());
                        pst.setString(4, "0");
                        pst.executeUpdate();
                        UsMng_Name_Textfield.setText("");
                        UsMng_Email_Textfield.setText("");
                        UsMng_Password_Textfield.setText("");
                        updateUsersIndex();

                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter correct user information", "Alert", JOptionPane.ERROR_MESSAGE);

        }

        Populate_Users();

    }//GEN-LAST:event_UsMng_Add_BtnActionPerformed

    private void UsMng_Update_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsMng_Update_BtnActionPerformed

        rowcount = User_Table.getSelectedRowCount();
        if (rowcount > 1) {

            JOptionPane.showMessageDialog(null, "Please select single user to update at a time", "Alert", JOptionPane.ERROR_MESSAGE);

        } else {
            try {
                if (!EmailValidator(UsMng_Email_Textfield.getText().trim())) {
                    JOptionPane.showMessageDialog(null, "Please enter valid Email Id", "Alert", JOptionPane.ERROR_MESSAGE);
                    UsMng_Email_Textfield.setText("");
                } else {
                    pst = con.prepareStatement("Update users set user_name=?,user_email=?,user_password=? where user_id=" + selectedUserid);
                    pst.setString(1, UsMng_Name_Textfield.getText());
                    pst.setString(2, UsMng_Email_Textfield.getText());
                    pst.setString(3, UsMng_Password_Textfield.getText());
                    pst.executeUpdate();
                    UsMng_Name_Textfield.setText("");
                    UsMng_Email_Textfield.setText("");
                    UsMng_Password_Textfield.setText("");
                }
            } catch (Exception w) {
                JOptionPane.showMessageDialog(this, "Connection Error!");
            }
            Populate_Users();
        }
    }//GEN-LAST:event_UsMng_Update_BtnActionPerformed

    private void Sub_TableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Sub_TableMousePressed


    }//GEN-LAST:event_Sub_TableMousePressed

    private void User_TableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_User_TableMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_User_TableMousePressed

    private void LsContent_Questions_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LsContent_Questions_BtnActionPerformed
        closeAllFrames();
        QuestionsFrame.setVisible(true);
        Populate_Questions();

    }//GEN-LAST:event_LsContent_Questions_BtnActionPerformed

    private void Qst_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Qst_TableMouseClicked
        rowcount = Qst_Table.getSelectedRowCount();
        int row = Qst_Table.getSelectedRow();
        if (rowcount > 1) {
            JOptionPane.showMessageDialog(null, "Please select a single question at a time", "Alert", JOptionPane.ERROR_MESSAGE);
        } else {

            DefaultTableModel model = (DefaultTableModel) Qst_Table.getModel();

            selectedQuestionId = model.getValueAt(row, 0).toString();
            String selectedQuestion = model.getValueAt(row, 2).toString();
            String option1 = model.getValueAt(row, 3).toString();
            String option2 = model.getValueAt(row, 4).toString();
            String option3 = model.getValueAt(row, 5).toString();
            String correctanswer = model.getValueAt(row, 6).toString();

            if (row >= 0) {
                Qst_Textarea.setText(selectedQuestion);
                Qst_Opt1_Textfield.setText(option1);
                Qst_Opt2_Textfield.setText(option2);
                Qst_Opt3_Textfield.setText(option3);
                if (correctanswer.equalsIgnoreCase("option1")) {
                    Qst_Opt1_Btn.setSelected(true);
                } else if (correctanswer.equalsIgnoreCase("option2")) {
                    Qst_Opt2_Btn.setSelected(true);
                } else {
                    Qst_Opt3_Btn.setSelected(true);

                }
            }

        }
    }//GEN-LAST:event_Qst_TableMouseClicked

    private void Qst_Update_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Qst_Update_BtnActionPerformed
        rowcount = Qst_Table.getSelectedRowCount();
        if (rowcount > 1) {
            JOptionPane.showMessageDialog(null, "Please select single question to update at a time", "Alert", JOptionPane.ERROR_MESSAGE);
        } else {
            String option = null;
            if (Qst_Opt1_Btn.isSelected()) {
                option = "option1";

            } else if (Qst_Opt2_Btn.isSelected()) {

                option = "option2";

            } else {

                option = "option3";
            }
            try {

                pst = con.prepareStatement("Update questions set question=?,option1=?,option2=?,option3=? ,answer=? where id=" + selectedQuestionId);
                pst.setString(1, Qst_Textarea.getText());
                pst.setString(2, Qst_Opt1_Textfield.getText());
                pst.setString(3, Qst_Opt2_Textfield.getText());
                pst.setString(4, Qst_Opt3_Textfield.getText());
                pst.setString(5, option);
                pst.executeUpdate();
                Qst_Textarea.setText("");
                Qst_Opt1_Textfield.setText("");
                Qst_Opt2_Textfield.setText("");
                Qst_Opt3_Textfield.setText("");
                buttonGroup1.clearSelection();

            } catch (Exception w) {
                JOptionPane.showMessageDialog(this, "Connection Error!");
            }

        }
    }//GEN-LAST:event_Qst_Update_BtnActionPerformed

    private void Qst_Add_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Qst_Add_BtnActionPerformed
        String insertquestion = "INSERT INTO questions(question,option1,option2,option3,answer,lesson_id,question_no) VALUES(?,?,?,?,?,?,?)";
        String correctoption = "";
        rowcount = Qst_Table.getSelectedRowCount();
        try {
            if (!Qst_Textarea.getText().equalsIgnoreCase("") && rowcount == 0) {
                pst = con.prepareStatement(insertquestion);
                pst.setString(1, Qst_Textarea.getText());
                pst.setString(2, Qst_Opt1_Textfield.getText());
                pst.setString(3, Qst_Opt2_Textfield.getText());
                pst.setString(4, Qst_Opt3_Textfield.getText());
                if (Qst_Opt1_Btn.isSelected()) {
                    correctoption = "option1";
                } else if (Qst_Opt2_Btn.isSelected()) {
                    correctoption = "option2";
                } else {
                    correctoption = "option3";
                }
                pst.setString(5, correctoption);
                pst.setString(6, selectedlesson);
                pst.setString(7, "0");

                if (buttonGroup1.getSelection() == null) {
                    JOptionPane.showMessageDialog(null, "Please select an answer", "Alert", JOptionPane.ERROR_MESSAGE);
                } else {
                    pst.execute();
                    Qst_Textarea.setText("");
                    Qst_Opt1_Textfield.setText("");
                    Qst_Opt2_Textfield.setText("");
                    Qst_Opt3_Textfield.setText("");
                    buttonGroup1.clearSelection();
                    updateQuestionsIndex();

                }
            } else {
                JOptionPane.showMessageDialog(null, "Please enter a new question", "Alert", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        Populate_Questions();
    }//GEN-LAST:event_Qst_Add_BtnActionPerformed

    private void subject_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subject_menuMouseClicked
        closeAllFrames();
        if (login == true) {
            SubjectFrame.setVisible(true);
        } else {
            UserLoginFrame.setVisible(true);
        }

    }//GEN-LAST:event_subject_menuMouseClicked

    private void userMngtMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userMngtMenuMouseClicked
        closeAllFrames();
        if (login == true) {
            UserManagementFrame.setVisible(true);
        } else {
            UserLoginFrame.setVisible(true);
        }

    }//GEN-LAST:event_userMngtMenuMouseClicked

    private void AddLs_Back_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddLs_Back_BtnActionPerformed
        closeAllFrames();
        LessonsFrame.setVisible(true);
    }//GEN-LAST:event_AddLs_Back_BtnActionPerformed

    private void Qst_Back_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Qst_Back_BtnActionPerformed
        closeAllFrames();
        LessonsFrame.setVisible(true);
    }//GEN-LAST:event_Qst_Back_BtnActionPerformed

    private void Qst_Back_BtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Qst_Back_BtnMouseClicked

    }//GEN-LAST:event_Qst_Back_BtnMouseClicked

    private void Qst_Opt2_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Qst_Opt2_BtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Qst_Opt2_BtnActionPerformed

    private void Ls_Back_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ls_Back_BtnActionPerformed
        closeAllFrames();
        SubjectFrame.setVisible(true);
    }//GEN-LAST:event_Ls_Back_BtnActionPerformed
    
    private void UserLogin_fun()
    {
        String sql = "Select * from users where user_name=? and user_password=?";

        try {
            pst = con.prepareStatement(sql);
            pst.setString(1, UserLogin_Name_Textfield.getText());
            pst.setString(2, UserLogin_Password_Textfield.getText());

            rs = pst.executeQuery();

            if (rs.next()) {

                subject_menu.setEnabled(true);
                userMngtMenu.setEnabled(true);
                changePwd.setEnabled(true);
                logoutMenu.setEnabled(true);
                UserLoginFrame.setVisible(false);
                JOptionPane.showMessageDialog(null, "Logged in successfully..");
                login = true;
                userLoginName = rs.getString("user_name");
                subject_menu.requestFocus();
            } else {

                JOptionPane.showMessageDialog(null, "Password or Username is incorrect");
                login = false;
            }
            UserLogin_Name_Textfield.setText("");
            UserLogin_Password_Textfield.setText("");
            
        } catch (SQLException e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    private void UserLogin_Login_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserLogin_Login_BtnActionPerformed
        UserLogin_fun();
    }//GEN-LAST:event_UserLogin_Login_BtnActionPerformed

    private void subject_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subject_menuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subject_menuActionPerformed

    private void changePwdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changePwdMouseClicked
        closeAllFrames();
        if (login == true) {
            ChangePasswordFrame.setVisible(true);
        } else {
            UserLoginFrame.setVisible(true);
        }
    }//GEN-LAST:event_changePwdMouseClicked

    private void changePwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changePwdActionPerformed

    private void ChangePwd_Submit_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangePwd_Submit_BtnActionPerformed
        try {
            pst = con.prepareStatement("Update users set user_password=? where user_name='" + userLoginName + "'");
            System.out.println(userLoginName);
            if ((ChangePwd_NewPwd_Textfield.getText()).equals(ChangePwd_ConfPwd_Textfield.getText())) {
                pst.setString(1, ChangePwd_NewPwd_Textfield.getText());
                pst.executeUpdate();
                ChangePasswordFrame.setVisible(false);
                JOptionPane.showMessageDialog(null, "Password Changed Successfully", "Alert", JOptionPane.ERROR_MESSAGE);
            } else {
                ChangePasswordFrame.setVisible(true);
                JOptionPane.showMessageDialog(null, "Password and Confirm Password Mismatched", "Alert", JOptionPane.ERROR_MESSAGE);
            }
            ChangePwd_NewPwd_Textfield.setText("");
            ChangePwd_ConfPwd_Textfield.setText("");

        } catch (Exception w) {
            JOptionPane.showMessageDialog(this, "Connection Error!");

        }
    }//GEN-LAST:event_ChangePwd_Submit_BtnActionPerformed

    private void logoutMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMenuMouseClicked
        closeAllFrames();
        disableMenus();
        login = false;
        UserLoginFrame.setVisible(true);

    }//GEN-LAST:event_logoutMenuMouseClicked
    private void UserLogin_ForgetPwd()
    {
     String sql = "Select user_email from users where user_name=?";
        String loggedUserEmailId = "";
        try {
            if (UserLogin_Name_Textfield.getText().equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(null, "Please enter User Name", "Alert", JOptionPane.ERROR_MESSAGE);
            } else {
                pst = con.prepareStatement(sql);
                pst.setString(1, UserLogin_Name_Textfield.getText());
                rs = pst.executeQuery();
                while (rs.next()) {
                    loggedUserEmailId = rs.getString(1);
                }

            }
        } catch (SQLException e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }    
    }
    
    private void UserLogin_ForgetPwd_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserLogin_ForgetPwd_BtnActionPerformed

       UserLogin_ForgetPwd();
    }//GEN-LAST:event_UserLogin_ForgetPwd_BtnActionPerformed

    private void Qst_Delete_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Qst_Delete_BtnActionPerformed
        int row = Qst_Table.getSelectedRow();
        rowcount = Qst_Table.getSelectedRowCount();
        DefaultTableModel model = (DefaultTableModel) Qst_Table.getModel();

        String selected = model.getValueAt(row, 0).toString();
        if (rowcount > 1) {

            JOptionPane.showMessageDialog(null, "Please select single question to delete at a time", "Alert", JOptionPane.ERROR_MESSAGE);

        } else {
            if (row >= 0) {

                model.removeRow(row);

                try {

                    pst = con.prepareStatement("delete from questions where id='" + selected + "' ");
                    pst.executeUpdate();
                } catch (Exception w) {
                    JOptionPane.showMessageDialog(this, "Connection Error!");
                }
            }
            updateQuestionsIndex();
            Populate_Questions();
            Qst_Textarea.setText("");
            Qst_Opt1_Textfield.setText("");
            Qst_Opt2_Textfield.setText("");
            Qst_Opt3_Textfield.setText("");
            buttonGroup1.clearSelection();
        }
    }//GEN-LAST:event_Qst_Delete_BtnActionPerformed

    private void Ls_Marks_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ls_Marks_BtnActionPerformed
        if (Ls_Table.getSelectedRowCount() > 0) {
            closeAllFrames();
            Populate_Students();
            StudentManagementFrame.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a lesson to check the students marks", "Alert", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_Ls_Marks_BtnActionPerformed

    private void Ls_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ls_TableMouseClicked
      if(Ls_Table.getSelectedRow()>0){
      selectedlesson = Ls_Table.getModel().getValueAt(Ls_Table.getSelectedRow(), 0).toString();
      }
       
    }//GEN-LAST:event_Ls_TableMouseClicked

    private void Ls_Content_Back_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ls_Content_Back_BtnActionPerformed
        closeAllFrames();
        LessonsFrame.setVisible(true);
        Populate_Lessons();
    }//GEN-LAST:event_Ls_Content_Back_BtnActionPerformed

    private void StDetails_Back_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StDetails_Back_BtnActionPerformed
        closeAllFrames();
        LessonsFrame.setVisible(true);
        Populate_Lessons();
    }//GEN-LAST:event_StDetails_Back_BtnActionPerformed

    private void Sub_Delete_BtnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Sub_Delete_BtnKeyReleased
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            subject_delete_fn();
        }
    }//GEN-LAST:event_Sub_Delete_BtnKeyReleased

    private void UserLogin_Login_BtnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UserLogin_Login_BtnKeyReleased
       
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            UserLogin_fun();
        }
    }//GEN-LAST:event_UserLogin_Login_BtnKeyReleased

    private void UserLogin_ForgetPwd_BtnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UserLogin_ForgetPwd_BtnKeyReleased
       
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
             UserLogin_ForgetPwd();
        }
    }//GEN-LAST:event_UserLogin_ForgetPwd_BtnKeyReleased

    private void Sub_Add_BtnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Sub_Add_BtnKeyReleased
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        closeAllFrames();
        AddSubjectFrame.setVisible(true);
        }
    }//GEN-LAST:event_Sub_Add_BtnKeyReleased

    private void Sub_Enter_BtnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Sub_Enter_BtnKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_TAB)
        {
            Sub_Add_Btn.requestFocus();
        }
            
    }//GEN-LAST:event_Sub_Enter_BtnKeyReleased

    private void Sub_TableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Sub_TableKeyReleased
         if(evt.getKeyCode()==KeyEvent.VK_TAB){
            Sub_Add_Btn.requestFocus();
     }
    }//GEN-LAST:event_Sub_TableKeyReleased

    private void Ls_TableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Ls_TableKeyReleased
         if(evt.getKeyCode()==KeyEvent.VK_TAB){
            Ls_Add_Btn.requestFocus();
     }
    }//GEN-LAST:event_Ls_TableKeyReleased

    private void AddSub_Name_TextareaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AddSub_Name_TextareaKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_TAB){
            AddSub_Add_Btn.requestFocus();
        }
    }//GEN-LAST:event_AddSub_Name_TextareaKeyReleased

    private void AddSub_Add_BtnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AddSub_Add_BtnKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            AddSub_Add_Btn_fun();
        }
    }//GEN-LAST:event_AddSub_Add_BtnKeyReleased

    private void subject_menuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_subject_menuKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            userMngtMenu.requestFocus();
        }
    }//GEN-LAST:event_subject_menuKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame AddLessonFrame;
    private javax.swing.JButton AddLs_Back_Btn;
    private javax.swing.JLabel AddLs_Content_Label;
    private javax.swing.JTextArea AddLs_Content_TextArea;
    private javax.swing.JLabel AddLs_Label;
    private javax.swing.JLabel AddLs_Name_Label;
    private javax.swing.JTextArea AddLs_Name_TextArea;
    private javax.swing.JButton AddLs_Submit_Btn;
    private javax.swing.JButton AddSub_Add_Btn;
    private javax.swing.JLabel AddSub_Label;
    private javax.swing.JLabel AddSub_Name_Label;
    private javax.swing.JTextArea AddSub_Name_Textarea;
    private javax.swing.JInternalFrame AddSubjectFrame;
    private javax.swing.JInternalFrame ChangePasswordFrame;
    private javax.swing.JLabel ChangePwd_ConfPwd_Label;
    private javax.swing.JTextField ChangePwd_ConfPwd_Textfield;
    private javax.swing.JLabel ChangePwd_Label;
    private javax.swing.JLabel ChangePwd_NewPwd_Label;
    private javax.swing.JTextField ChangePwd_NewPwd_Textfield;
    private javax.swing.JButton ChangePwd_Submit_Btn;
    private javax.swing.JInternalFrame LessonsContentFrame;
    private javax.swing.JInternalFrame LessonsFrame;
    private javax.swing.JButton LsContent_Questions_Btn;
    private javax.swing.JTextArea LsContent_TextArea;
    private javax.swing.JButton LsContent_Update_Btn;
    private javax.swing.JLabel LsContent_label;
    private javax.swing.JButton Ls_Add_Btn;
    private javax.swing.JButton Ls_Back_Btn;
    private javax.swing.JButton Ls_Content_Back_Btn;
    private javax.swing.JButton Ls_Delete_Btn;
    private javax.swing.JButton Ls_Enter_Btn;
    private javax.swing.JLabel Ls_Label;
    private javax.swing.JButton Ls_Marks_Btn;
    private javax.swing.JTable Ls_Table;
    private javax.swing.JButton Qst_Add_Btn;
    private javax.swing.JButton Qst_Back_Btn;
    private javax.swing.JButton Qst_Delete_Btn;
    private javax.swing.JLabel Qst_Label;
    private javax.swing.JRadioButton Qst_Opt1_Btn;
    private javax.swing.JTextField Qst_Opt1_Textfield;
    private javax.swing.JRadioButton Qst_Opt2_Btn;
    private javax.swing.JTextField Qst_Opt2_Textfield;
    private javax.swing.JRadioButton Qst_Opt3_Btn;
    private javax.swing.JTextField Qst_Opt3_Textfield;
    private javax.swing.JTable Qst_Table;
    private javax.swing.JTextArea Qst_Textarea;
    private javax.swing.JButton Qst_Update_Btn;
    private javax.swing.JInternalFrame QuestionsFrame;
    private javax.swing.JButton StDetails_Back_Btn;
    private javax.swing.JLabel StDetails_Label;
    private javax.swing.JTable St_Table;
    private javax.swing.JInternalFrame StudentManagementFrame;
    private javax.swing.JButton Sub_Add_Btn;
    private javax.swing.JButton Sub_Delete_Btn;
    private javax.swing.JButton Sub_Enter_Btn;
    private javax.swing.JLabel Sub_Label;
    private javax.swing.JTable Sub_Table;
    private javax.swing.JInternalFrame SubjectFrame;
    private javax.swing.JButton UsMng_Add_Btn;
    private javax.swing.JButton UsMng_Delete_Btn;
    private javax.swing.JLabel UsMng_Email_Label;
    private javax.swing.JTextField UsMng_Email_Textfield;
    private javax.swing.JLabel UsMng_Name_Label;
    private javax.swing.JTextField UsMng_Name_Textfield;
    private javax.swing.JLabel UsMng_Password_Label;
    private javax.swing.JTextField UsMng_Password_Textfield;
    private javax.swing.JButton UsMng_Update_Btn;
    private javax.swing.JLabel UsMng_label;
    private javax.swing.JInternalFrame UserLoginFrame;
    private javax.swing.JButton UserLogin_ForgetPwd_Btn;
    private javax.swing.JLabel UserLogin_Label;
    private javax.swing.JButton UserLogin_Login_Btn;
    private javax.swing.JLabel UserLogin_Name_Label;
    private javax.swing.JTextField UserLogin_Name_Textfield;
    private javax.swing.JLabel UserLogin_Password_Label;
    private javax.swing.JTextField UserLogin_Password_Textfield;
    private javax.swing.JInternalFrame UserManagementFrame;
    private javax.swing.JTable User_Table;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JMenu changePwd;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JMenu logoutMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu subject_menu;
    private javax.swing.JMenu userMngtMenu;
    // End of variables declaration//GEN-END:variables

}
