/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Ashraf Hameed
 */
public class Home extends javax.swing.JFrame {

    Connection con;
    Statement stmt;
    ResultSet rs;
    PreparedStatement pst;
    PreparedStatement pstchild;
    String nm = null;
    String subject = null;
    String selectedlesson = null;
    String selectedUserid = null;
    String selectedQuestionId = null;
    int rowcount = 0;
    Boolean login=false;
    String userLoginName="";
    String EMAIL_PATTERN="";
    Boolean userEmailCheck=false;
    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        con = mysqlconnect.ConnectDb();
        Populate_Subject();
        Populate_Users();
        closeAllFrames();
        disableMenus();
        UserLogin.setVisible(true);
             
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        desktopPane = new javax.swing.JDesktopPane();
        LessonsFrame = new javax.swing.JInternalFrame();
        Ls_Label = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Ls_Table = new javax.swing.JTable();
        Ls_Add_Btn = new javax.swing.JButton();
        Ls_Delete_Btn = new javax.swing.JButton();
        Ls_Enter_Btn = new javax.swing.JButton();
        lesson_back_btn = new javax.swing.JButton();
        AddLessonFrame = new javax.swing.JInternalFrame();
        Add_Ls_Label = new javax.swing.JLabel();
        Add_Ls_Submit_Btn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        Add_Ls_TextArea = new javax.swing.JTextArea();
        Add_ls_content_Label = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        Add_ls_content_textArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        back_btn = new javax.swing.JButton();
        LessonsContent = new javax.swing.JInternalFrame();
        lessonContent = new javax.swing.JTextArea();
        Update = new javax.swing.JButton();
        ablessonlabel = new javax.swing.JLabel();
        Qstn_btn = new javax.swing.JButton();
        SubjectFrame = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        subjects_table = new javax.swing.JTable();
        abadd = new javax.swing.JButton();
        abdelete = new javax.swing.JButton();
        abenter = new javax.swing.JButton();
        SubjectAddFrame = new javax.swing.JInternalFrame();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        AddNewSubject = new javax.swing.JTextArea();
        abaddnewsubject = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        UserManagementFrame = new javax.swing.JInternalFrame();
        us_mng_label = new javax.swing.JLabel();
        user_textField = new javax.swing.JTextField();
        email_textField = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        user_table = new javax.swing.JTable();
        add_user_btn = new javax.swing.JButton();
        delete_user_btn = new javax.swing.JButton();
        update_user_btn = new javax.swing.JButton();
        username_label = new javax.swing.JLabel();
        email_label = new javax.swing.JLabel();
        password_label = new javax.swing.JLabel();
        password_textField = new javax.swing.JTextField();
        QuestionsFrame = new javax.swing.JInternalFrame();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        questions_table = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        qstn_txtArea = new javax.swing.JTextArea();
        opt1_txtField = new javax.swing.JTextField();
        opt2_txtField = new javax.swing.JTextField();
        opt3_txtField = new javax.swing.JTextField();
        Update_questBtn = new javax.swing.JButton();
        opt1_btn = new javax.swing.JRadioButton();
        opt2_btn = new javax.swing.JRadioButton();
        opt3_btn = new javax.swing.JRadioButton();
        add_ques_btn = new javax.swing.JButton();
        qst_back_btn = new javax.swing.JButton();
        UserLogin = new javax.swing.JInternalFrame();
        usr_label = new javax.swing.JLabel();
        usr_name = new javax.swing.JLabel();
        usr_pwd = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        user_text = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        pwd_field = new javax.swing.JTextField();
        ChangePasswordFrame = new javax.swing.JInternalFrame();
        changePasswordlabel = new javax.swing.JLabel();
        pwdfield = new javax.swing.JLabel();
        confirmPwdField = new javax.swing.JLabel();
        pwdTxtField = new javax.swing.JTextField();
        pwdConTxtField = new javax.swing.JTextField();
        ChangePwdButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        subject_menu = new javax.swing.JMenu();
        userMngtMenu = new javax.swing.JMenu();
        changePwd = new javax.swing.JMenu();
        logoutMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LessonsFrame.setPreferredSize(new java.awt.Dimension(600, 400));
        LessonsFrame.setVisible(true);

        Ls_Label.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Ls_Label.setText("Lessons");

        Ls_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Sl.No.", "Lesson"
            }
        ));
        Ls_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Ls_TableMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(Ls_Table);

        Ls_Add_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Ls_Add_Btn.setText("Add");
        Ls_Add_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ls_Add_BtnActionPerformed(evt);
            }
        });

        Ls_Delete_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Ls_Delete_Btn.setText("Delete");
        Ls_Delete_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ls_Delete_BtnActionPerformed(evt);
            }
        });

        Ls_Enter_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Ls_Enter_Btn.setText("Enter");
        Ls_Enter_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ls_Enter_BtnActionPerformed(evt);
            }
        });

        lesson_back_btn.setText("Back");
        lesson_back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lesson_back_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LessonsFrameLayout = new javax.swing.GroupLayout(LessonsFrame.getContentPane());
        LessonsFrame.getContentPane().setLayout(LessonsFrameLayout);
        LessonsFrameLayout.setHorizontalGroup(
            LessonsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LessonsFrameLayout.createSequentialGroup()
                .addGroup(LessonsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LessonsFrameLayout.createSequentialGroup()
                        .addComponent(lesson_back_btn)
                        .addGap(161, 161, 161)
                        .addComponent(Ls_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(LessonsFrameLayout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(LessonsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(LessonsFrameLayout.createSequentialGroup()
                                .addComponent(Ls_Add_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(Ls_Delete_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(Ls_Enter_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        LessonsFrameLayout.setVerticalGroup(
            LessonsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LessonsFrameLayout.createSequentialGroup()
                .addGroup(LessonsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ls_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lesson_back_btn))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(LessonsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ls_Enter_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ls_Delete_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ls_Add_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        desktopPane.add(LessonsFrame);
        LessonsFrame.setBounds(0, 0, 600, 400);

        AddLessonFrame.setBackground(new java.awt.Color(204, 204, 204));
        AddLessonFrame.setPreferredSize(new java.awt.Dimension(500, 400));
        AddLessonFrame.setVisible(true);

        Add_Ls_Label.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Add_Ls_Label.setText("Lesson Name");

        Add_Ls_Submit_Btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Add_Ls_Submit_Btn.setText("Submit");
        Add_Ls_Submit_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_Ls_Submit_BtnActionPerformed(evt);
            }
        });

        Add_Ls_TextArea.setColumns(20);
        Add_Ls_TextArea.setRows(5);
        jScrollPane4.setViewportView(Add_Ls_TextArea);

        Add_ls_content_Label.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Add_ls_content_Label.setText("Lesson Content");

        Add_ls_content_textArea.setColumns(20);
        Add_ls_content_textArea.setRows(5);
        jScrollPane5.setViewportView(Add_ls_content_textArea);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("Add Lesson");

        back_btn.setText("Back");
        back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddLessonFrameLayout = new javax.swing.GroupLayout(AddLessonFrame.getContentPane());
        AddLessonFrame.getContentPane().setLayout(AddLessonFrameLayout);
        AddLessonFrameLayout.setHorizontalGroup(
            AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddLessonFrameLayout.createSequentialGroup()
                .addGroup(AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddLessonFrameLayout.createSequentialGroup()
                        .addComponent(back_btn)
                        .addGap(84, 84, 84)
                        .addComponent(jLabel3))
                    .addGroup(AddLessonFrameLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Add_ls_content_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Add_Ls_Label))
                        .addGap(37, 37, 37)
                        .addGroup(AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Add_Ls_Submit_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                                .addComponent(jScrollPane4)))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        AddLessonFrameLayout.setVerticalGroup(
            AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddLessonFrameLayout.createSequentialGroup()
                .addGroup(AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddLessonFrameLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddLessonFrameLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(Add_Ls_Label)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(AddLessonFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddLessonFrameLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(Add_Ls_Submit_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddLessonFrameLayout.createSequentialGroup()
                        .addComponent(Add_ls_content_Label)
                        .addGap(107, 107, 107))))
        );

        desktopPane.add(AddLessonFrame);
        AddLessonFrame.setBounds(0, 0, 500, 400);

        LessonsContent.setPreferredSize(new java.awt.Dimension(600, 400));
        LessonsContent.setVisible(true);

        lessonContent.setColumns(20);
        lessonContent.setRows(5);

        Update.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        ablessonlabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ablessonlabel.setText("jLabel5");

        Qstn_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Qstn_btn.setText("Questions");
        Qstn_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Qstn_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LessonsContentLayout = new javax.swing.GroupLayout(LessonsContent.getContentPane());
        LessonsContent.getContentPane().setLayout(LessonsContentLayout);
        LessonsContentLayout.setHorizontalGroup(
            LessonsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LessonsContentLayout.createSequentialGroup()
                .addGroup(LessonsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LessonsContentLayout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(ablessonlabel))
                    .addGroup(LessonsContentLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(lessonContent, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(LessonsContentLayout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addGroup(LessonsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Update, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(Qstn_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        LessonsContentLayout.setVerticalGroup(
            LessonsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LessonsContentLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(ablessonlabel)
                .addGap(26, 26, 26)
                .addComponent(lessonContent, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Qstn_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        desktopPane.add(LessonsContent);
        LessonsContent.setBounds(0, 0, 600, 400);

        SubjectFrame.setPreferredSize(new java.awt.Dimension(800, 600));
        SubjectFrame.setVisible(true);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Subjects");

        subjects_table.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        subjects_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S. no.", "Subject Name"
            }
        ));
        subjects_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subjects_tableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                subjects_tableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(subjects_table);

        abadd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        abadd.setText("Add");
        abadd.setMaximumSize(new java.awt.Dimension(75, 50));
        abadd.setPreferredSize(new java.awt.Dimension(57, 23));
        abadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abaddActionPerformed(evt);
            }
        });

        abdelete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        abdelete.setText("Delete");
        abdelete.setPreferredSize(new java.awt.Dimension(73, 23));
        abdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abdeleteActionPerformed(evt);
            }
        });

        abenter.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        abenter.setText("Enter");
        abenter.setPreferredSize(new java.awt.Dimension(67, 23));
        abenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abenterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SubjectFrameLayout = new javax.swing.GroupLayout(SubjectFrame.getContentPane());
        SubjectFrame.getContentPane().setLayout(SubjectFrameLayout);
        SubjectFrameLayout.setHorizontalGroup(
            SubjectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubjectFrameLayout.createSequentialGroup()
                .addGroup(SubjectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SubjectFrameLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addGroup(SubjectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(SubjectFrameLayout.createSequentialGroup()
                                .addComponent(abadd, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(77, 77, 77)
                                .addComponent(abdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(abenter, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(SubjectFrameLayout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        SubjectFrameLayout.setVerticalGroup(
            SubjectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubjectFrameLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(SubjectFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(abadd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(abdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(abenter, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(181, Short.MAX_VALUE))
        );

        desktopPane.add(SubjectFrame);
        SubjectFrame.setBounds(0, 0, 800, 600);

        SubjectAddFrame.setPreferredSize(new java.awt.Dimension(500, 300));
        SubjectAddFrame.setVisible(true);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Subject Name");

        AddNewSubject.setColumns(20);
        AddNewSubject.setRows(5);
        jScrollPane2.setViewportView(AddNewSubject);

        abaddnewsubject.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        abaddnewsubject.setText("Add");
        abaddnewsubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abaddnewsubjectActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setText("Add Subject");

        javax.swing.GroupLayout SubjectAddFrameLayout = new javax.swing.GroupLayout(SubjectAddFrame.getContentPane());
        SubjectAddFrame.getContentPane().setLayout(SubjectAddFrameLayout);
        SubjectAddFrameLayout.setHorizontalGroup(
            SubjectAddFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubjectAddFrameLayout.createSequentialGroup()
                .addGroup(SubjectAddFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SubjectAddFrameLayout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SubjectAddFrameLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel2)
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SubjectAddFrameLayout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(abaddnewsubject, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        SubjectAddFrameLayout.setVerticalGroup(
            SubjectAddFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubjectAddFrameLayout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGroup(SubjectAddFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SubjectAddFrameLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(abaddnewsubject, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(SubjectAddFrameLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        desktopPane.add(SubjectAddFrame);
        SubjectAddFrame.setBounds(0, 0, 500, 300);

        UserManagementFrame.setPreferredSize(new java.awt.Dimension(700, 500));
        UserManagementFrame.setVisible(true);

        us_mng_label.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        us_mng_label.setText("User Management");

        user_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "User name", "Email Address", "Password"
            }
        ));
        user_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_tableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                user_tableMousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(user_table);

        add_user_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        add_user_btn.setText("Add");
        add_user_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_user_btnActionPerformed(evt);
            }
        });

        delete_user_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        delete_user_btn.setText("Delete");
        delete_user_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_user_btnActionPerformed(evt);
            }
        });

        update_user_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        update_user_btn.setText("Update");
        update_user_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_user_btnActionPerformed(evt);
            }
        });

        username_label.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        username_label.setText("User Name");

        email_label.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        email_label.setText("Email");

        password_label.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        password_label.setText("Password");

        javax.swing.GroupLayout UserManagementFrameLayout = new javax.swing.GroupLayout(UserManagementFrame.getContentPane());
        UserManagementFrame.getContentPane().setLayout(UserManagementFrameLayout);
        UserManagementFrameLayout.setHorizontalGroup(
            UserManagementFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserManagementFrameLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(UserManagementFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(UserManagementFrameLayout.createSequentialGroup()
                        .addComponent(username_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(user_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(email_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(email_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(password_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(password_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(UserManagementFrameLayout.createSequentialGroup()
                        .addComponent(add_user_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(162, 162, 162)
                        .addComponent(delete_user_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(update_user_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(UserManagementFrameLayout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(us_mng_label))
        );
        UserManagementFrameLayout.setVerticalGroup(
            UserManagementFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserManagementFrameLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(us_mng_label)
                .addGap(56, 56, 56)
                .addGroup(UserManagementFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(user_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username_label)
                    .addComponent(email_label)
                    .addComponent(password_label)
                    .addComponent(password_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101)
                .addGroup(UserManagementFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_user_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete_user_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update_user_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        desktopPane.add(UserManagementFrame);
        UserManagementFrame.setBounds(0, 0, 700, 500);

        QuestionsFrame.setPreferredSize(new java.awt.Dimension(800, 600));
        QuestionsFrame.setVisible(true);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setText("Questions");

        questions_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Question id", "Lesson Id", "Question", "opt 1", "opt 2", "opt 3", "Answer"
            }
        ));
        questions_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                questions_tableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(questions_table);

        qstn_txtArea.setColumns(20);
        qstn_txtArea.setRows(5);
        jScrollPane8.setViewportView(qstn_txtArea);

        Update_questBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Update_questBtn.setText("Update");
        Update_questBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_questBtnActionPerformed(evt);
            }
        });

        buttonGroup1.add(opt1_btn);

        buttonGroup1.add(opt2_btn);
        opt2_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opt2_btnActionPerformed(evt);
            }
        });

        buttonGroup1.add(opt3_btn);

        add_ques_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        add_ques_btn.setText("Add");
        add_ques_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_ques_btnActionPerformed(evt);
            }
        });

        qst_back_btn.setText("Back");
        qst_back_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                qst_back_btnMouseClicked(evt);
            }
        });
        qst_back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qst_back_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout QuestionsFrameLayout = new javax.swing.GroupLayout(QuestionsFrame.getContentPane());
        QuestionsFrame.getContentPane().setLayout(QuestionsFrameLayout);
        QuestionsFrameLayout.setHorizontalGroup(
            QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuestionsFrameLayout.createSequentialGroup()
                .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(QuestionsFrameLayout.createSequentialGroup()
                        .addComponent(qst_back_btn)
                        .addGap(261, 261, 261)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(QuestionsFrameLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(QuestionsFrameLayout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(QuestionsFrameLayout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(QuestionsFrameLayout.createSequentialGroup()
                                .addComponent(Update_questBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(add_ques_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(QuestionsFrameLayout.createSequentialGroup()
                                .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(opt1_btn)
                                    .addComponent(opt3_btn)
                                    .addComponent(opt2_btn))
                                .addGap(18, 18, 18)
                                .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(opt2_txtField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(opt3_txtField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(opt1_txtField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        QuestionsFrameLayout.setVerticalGroup(
            QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuestionsFrameLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qst_back_btn)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(opt1_txtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opt1_btn))
                .addGap(25, 25, 25)
                .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(opt2_txtField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opt2_btn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(27, 27, 27)
                .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(opt3_btn)
                    .addComponent(opt3_txtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(QuestionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Update_questBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_ques_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        desktopPane.add(QuestionsFrame);
        QuestionsFrame.setBounds(0, 0, 800, 600);

        UserLogin.setVisible(true);

        usr_label.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        usr_label.setText("User Login");

        usr_name.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        usr_name.setText("User Name");

        usr_pwd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        usr_pwd.setText("Password");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setText("Forget Password");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UserLoginLayout = new javax.swing.GroupLayout(UserLogin.getContentPane());
        UserLogin.getContentPane().setLayout(UserLoginLayout);
        UserLoginLayout.setHorizontalGroup(
            UserLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserLoginLayout.createSequentialGroup()
                .addContainerGap(140, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124)
                .addComponent(jButton3)
                .addGap(105, 105, 105))
            .addGroup(UserLoginLayout.createSequentialGroup()
                .addGroup(UserLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UserLoginLayout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(UserLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usr_name)
                            .addComponent(usr_pwd))
                        .addGap(120, 120, 120)
                        .addGroup(UserLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(user_text)
                            .addComponent(pwd_field, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)))
                    .addGroup(UserLoginLayout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(usr_label)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        UserLoginLayout.setVerticalGroup(
            UserLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usr_label)
                .addGap(41, 41, 41)
                .addGroup(UserLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usr_name)
                    .addComponent(user_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(UserLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pwd_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usr_pwd))
                .addGap(76, 172, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserLoginLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(UserLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton1))
                .addGap(86, 86, 86))
        );

        desktopPane.add(UserLogin);
        UserLogin.setBounds(0, 0, 620, 330);

        ChangePasswordFrame.setPreferredSize(new java.awt.Dimension(500, 300));
        ChangePasswordFrame.setVisible(true);

        changePasswordlabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        changePasswordlabel.setText("Change Password");

        pwdfield.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        pwdfield.setText("New Password");

        confirmPwdField.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        confirmPwdField.setText("Confirm Password");

        ChangePwdButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ChangePwdButton.setText("Submit");
        ChangePwdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangePwdButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ChangePasswordFrameLayout = new javax.swing.GroupLayout(ChangePasswordFrame.getContentPane());
        ChangePasswordFrame.getContentPane().setLayout(ChangePasswordFrameLayout);
        ChangePasswordFrameLayout.setHorizontalGroup(
            ChangePasswordFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChangePasswordFrameLayout.createSequentialGroup()
                .addGroup(ChangePasswordFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ChangePasswordFrameLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(changePasswordlabel))
                    .addGroup(ChangePasswordFrameLayout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(ChangePasswordFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(ChangePasswordFrameLayout.createSequentialGroup()
                                .addComponent(pwdfield)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pwdTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ChangePasswordFrameLayout.createSequentialGroup()
                                .addComponent(confirmPwdField)
                                .addGap(75, 75, 75)
                                .addComponent(pwdConTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(ChangePasswordFrameLayout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(ChangePwdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(270, 270, 270))
        );
        ChangePasswordFrameLayout.setVerticalGroup(
            ChangePasswordFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChangePasswordFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(changePasswordlabel)
                .addGap(35, 35, 35)
                .addGroup(ChangePasswordFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pwdfield)
                    .addComponent(pwdTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(ChangePasswordFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmPwdField)
                    .addComponent(pwdConTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(ChangePwdButton)
                .addGap(56, 56, 56))
        );

        desktopPane.add(ChangePasswordFrame);
        ChangePasswordFrame.setBounds(0, 0, 500, 300);

        subject_menu.setMnemonic('f');
        subject_menu.setText("Subject");
        subject_menu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        subject_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subject_menuMouseClicked(evt);
            }
        });
        subject_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subject_menuActionPerformed(evt);
            }
        });
        menuBar.add(subject_menu);

        userMngtMenu.setMnemonic('e');
        userMngtMenu.setText("User Management");
        userMngtMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userMngtMenuMouseClicked(evt);
            }
        });
        menuBar.add(userMngtMenu);

        changePwd.setText("Change Password");
        changePwd.setPreferredSize(new java.awt.Dimension(130, 19));
        changePwd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changePwdMouseClicked(evt);
            }
        });
        changePwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePwdActionPerformed(evt);
            }
        });
        menuBar.add(changePwd);

        logoutMenu.setText("Logout");
        logoutMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMenuMouseClicked(evt);
            }
        });
        menuBar.add(logoutMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1253, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Populate_Subject() {
        try {
            pst = con.prepareStatement("select subject_id as Id ,subject as Subject from subject");
            rs = pst.executeQuery();
            subjects_table.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 12)); 
            subjects_table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void Populate_Lessons() {
        try {
            pst = con.prepareStatement("select lesson_id as Id,lesson_name as Lesson from lessons where subject_id=" + subject);
            rs = pst.executeQuery();
            Ls_Table.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 12));  
            Ls_Table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e)
        {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private Boolean userCheck(String emailCheck)
    {
        userEmailCheck=false;
        ArrayList<String> emailList = new ArrayList<String>(); 
        String str="Select email_id from users";
        
        try{
            pst=con.prepareStatement(str);
            rs=pst.executeQuery();
            while(rs.next()){
                 int i=1; 
                 emailList.add(rs.getString(i++));
                
            }
            for(int a=1;a<emailList.size();a++)
            {
                if(emailCheck.equalsIgnoreCase(emailList.get(a)))
                {
                    System.out.println("Hii");
                    userEmailCheck=true;
                }
                
            }
        }
        catch(Exception e)
        {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
        return userEmailCheck;
    }
    private void closeAllFrames() {
        SubjectFrame.setVisible(false);
        SubjectAddFrame.setVisible(false);
        LessonsFrame.setVisible(false);
        AddLessonFrame.setVisible(false);
        LessonsContent.setVisible(false);
        UserManagementFrame.setVisible(false);
        QuestionsFrame.setVisible(false);
        UserLogin.setVisible(false);
        ChangePasswordFrame.setVisible(false);
    }

    private void disableMenus()
    {
        subject_menu.setEnabled(false);
        userMngtMenu.setEnabled(false);
        changePwd.setEnabled(false);
        logoutMenu.setEnabled(false);
    }
    private void Populate_Users() {
        try {
            pst = con.prepareStatement("select user_id as Id,user_name as Name, email_id as Email, user_password as Password from users");
            rs = pst.executeQuery();
            user_table.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 12)); 
            user_table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void Populate_Questions() {
        try {
            pst = con.prepareStatement("select * from questions where lesson_id=" + selectedlesson);
            rs = pst.executeQuery();
            questions_table.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 12)); 
            questions_table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }
  
     private void Delete_Lesson(String selected) 
     {  
        try {
            System.out.println("Hi......"+selected);
            pst= con.prepareStatement("delete from lessons where subject_id='"+ selected + "' ");
            pst.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
     
     private void Delete_Questions(String selectedlesson) 
     {  
        String lessonIds[]=null;
        String lessonquery="";
        int i=0;
        try{
        lessonquery = "select lesson_id from lessons where subject_id=" + selectedlesson;

                pst = con.prepareStatement(lessonquery); 

                rs = pst.executeQuery(lessonquery);
                while(rs.next())
                {
                    System.out.println("Hi......"+rs.getString(1));
                  lessonIds[i]= rs.getString(1);
                  pstchild= con.prepareStatement("delete from questions where lesson_id='"+ lessonIds[i] + "' ");
                  pstchild.executeUpdate();
                  i++; 
                }  
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Connection Error!");
        }
    }
     
    private void abaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abaddActionPerformed
        closeAllFrames();
        SubjectAddFrame.setVisible(true);
    }//GEN-LAST:event_abaddActionPerformed

    private void abdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abdeleteActionPerformed
        int viewIndex = subjects_table.getSelectedRow();
        rowcount = subjects_table.getSelectedRowCount();
        if (rowcount > 1) {
            JOptionPane.showMessageDialog(null, "Please select a single subject to delete at a time", "Alert", JOptionPane.ERROR_MESSAGE);
        } else {
            
            DefaultTableModel model = (DefaultTableModel) subjects_table.getModel();
            String selected = model.getValueAt(viewIndex, 0).toString();
            
            if (viewIndex != -1) {

                model.removeRow(viewIndex);
                try {
                    
                    pst = con.prepareStatement("delete from subject where subject_id='" + selected + "' ");
                    pst.executeUpdate();
                   // Delete_Lesson(selected);
                   // Delete_Questions(selected);
                } catch (Exception w) {
                    JOptionPane.showMessageDialog(this, "Connection Error!");
                }

            }
        }

    }//GEN-LAST:event_abdeleteActionPerformed

    private void abaddnewsubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abaddnewsubjectActionPerformed
            if(!AddNewSubject.getText().equalsIgnoreCase(""))
            {
        String insertsubject = "INSERT INTO Subject( subject) VALUES(?)";
        try {
            pst = con.prepareStatement(insertsubject);
            pst.setString(1, AddNewSubject.getText());
            pst.executeUpdate();

        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        AddNewSubject.setText("");
        Populate_Subject();
        closeAllFrames();
        SubjectFrame.setVisible(true);
        
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please enter a Subject", "Alert", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_abaddnewsubjectActionPerformed

    private void subjects_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjects_tableMouseClicked

    }//GEN-LAST:event_subjects_tableMouseClicked

    private void abenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abenterActionPerformed
        String lessonsid = "";
        String lessonsname = "";
        rowcount = subjects_table.getSelectedRowCount();
        if (rowcount > 1) {
            JOptionPane.showMessageDialog(null, "Please select a single subject at a time", "Alert", JOptionPane.ERROR_MESSAGE);
        } else {

            try {
                subject = subjects_table.getModel().getValueAt(subjects_table.getSelectedRow(), 0).toString();
                lessonsid = "select lesson_id  as Id,lesson_name as Lesson from lessons where subject_id=" + subject;

                pst = con.prepareStatement(lessonsid); // create a statement

                rs = pst.executeQuery(lessonsid);
                Ls_Table.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 12)); 
                Ls_Table.setModel(DbUtils.resultSetToTableModel(rs));

                closeAllFrames();
                LessonsFrame.setVisible(true);
              
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_abenterActionPerformed

    private void Ls_Enter_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ls_Enter_BtnActionPerformed
        String lessonscontent = "";
        rowcount = Ls_Table.getSelectedRowCount();
        if (rowcount > 1) {
            JOptionPane.showMessageDialog(null, "Please select a single lesson at a time", "Alert", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                selectedlesson = Ls_Table.getModel().getValueAt(Ls_Table.getSelectedRow(), 0).toString();

                lessonscontent = "select lesson_name,lesson_content from lessons where lesson_id=" + selectedlesson;

                pst = con.prepareStatement(lessonscontent);

                rs = pst.executeQuery(lessonscontent);

                while (rs.next()) {
                    ablessonlabel.setText(rs.getString(1));
                    lessonContent.setText(rs.getString(2));
                }
                closeAllFrames();
                LessonsContent.setVisible(true);

            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_Ls_Enter_BtnActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed

        String updatelessoncontent = "Update lessons set lesson_content=? where lesson_id=" + selectedlesson;
        try {
            pst = con.prepareStatement(updatelessoncontent);
            pst.setString(1, lessonContent.getText());
            pst.executeUpdate();

        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        closeAllFrames();
        LessonsFrame.setVisible(true);
        
    }//GEN-LAST:event_UpdateActionPerformed

    private void Ls_Delete_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ls_Delete_BtnActionPerformed

        int row = Ls_Table.getSelectedRow();
        rowcount = Ls_Table.getSelectedRowCount();
        if (rowcount > 1) {
            JOptionPane.showMessageDialog(null, "Please select a single lesson to delete at a time", "Alert", JOptionPane.ERROR_MESSAGE);
        } else {
            DefaultTableModel model = (DefaultTableModel) Ls_Table.getModel();

            String selected = model.getValueAt(row, 0).toString();

            if (row >= 0) {

                model.removeRow(row);

                try {
                    pst = con.prepareStatement("delete from lessons where lesson_id='" + selected + "' ");
                    pst.executeUpdate();
                } catch (Exception w) {
                    JOptionPane.showMessageDialog(this, "Connection Error!");
                }
            }
        }
    }//GEN-LAST:event_Ls_Delete_BtnActionPerformed

    private void Ls_Add_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ls_Add_BtnActionPerformed
        closeAllFrames();
        AddLessonFrame.setVisible(true);
    }//GEN-LAST:event_Ls_Add_BtnActionPerformed

    private void Add_Ls_Submit_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_Ls_Submit_BtnActionPerformed
        String insertsubject = "INSERT INTO Lessons( lesson_name,lesson_content,subject_id) VALUES(?,?,?)";
        if(!Add_Ls_TextArea.getText().equalsIgnoreCase("") && !(Add_ls_content_textArea.getText().equalsIgnoreCase("")))
        {
        try {
            pst = con.prepareStatement(insertsubject);
            pst.setString(1, Add_Ls_TextArea.getText());
            pst.setString(2, Add_ls_content_textArea.getText());
            pst.setString(3, subject);
            pst.executeUpdate();

        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        Populate_Lessons();
        closeAllFrames();
        LessonsFrame.setVisible(true);
        Add_Ls_TextArea.setText("");
        Add_ls_content_textArea.setText("");
       
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please enter the lesson information", "Alert", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_Add_Ls_Submit_BtnActionPerformed

    private void delete_user_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_user_btnActionPerformed
        int row = user_table.getSelectedRow();
        rowcount = user_table.getSelectedRowCount();
        DefaultTableModel model = (DefaultTableModel) user_table.getModel();

        String selected = model.getValueAt(row, 0).toString();
        if (rowcount > 1) {

            JOptionPane.showMessageDialog(null, "Please select single user to delete at a time", "Alert", JOptionPane.ERROR_MESSAGE);

        } else {
            if (row >= 0) {

                model.removeRow(row);

                try {
                    //Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/mydatabase", "root", "hey");
                    pst = con.prepareStatement("delete from users where user_id='" + selected + "' ");
                    pst.executeUpdate();
                } catch (Exception w) {
                    JOptionPane.showMessageDialog(this, "Connection Error!");
                }
            }
            user_textField.setText("");
            email_textField.setText("");
            password_textField.setText("");
        }
    }//GEN-LAST:event_delete_user_btnActionPerformed

    private void user_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_tableMouseClicked
        int row = user_table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) user_table.getModel();

        selectedUserid = model.getValueAt(row, 0).toString();
        String selectedUsername = model.getValueAt(row, 1).toString();
        String selectedEmail = model.getValueAt(row, 2).toString();
        String selectedPassword = model.getValueAt(row, 3).toString();

        if (row >= 0) {
            user_textField.setText(selectedUsername);
            email_textField.setText(selectedEmail);
            password_textField.setText(selectedPassword);

        }

    }//GEN-LAST:event_user_tableMouseClicked
    
    private Boolean EmailValidator(String emailIdString)
    {
        Pattern patternString;
        Matcher matcherString;
        Boolean ValidEmailId=false;
        EMAIL_PATTERN = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"+ "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
        
         patternString=Pattern.compile(EMAIL_PATTERN);
          matcherString = patternString.matcher(emailIdString);
                
        if(!matcherString.matches())
        {
            ValidEmailId=false;
         }
        else
        {
            ValidEmailId=true;
        }
        return ValidEmailId;
    }
    private void add_user_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_user_btnActionPerformed

        if (!user_textField.getText().equalsIgnoreCase("") || !email_textField.getText().equalsIgnoreCase("") || !password_textField.getText().equalsIgnoreCase("")) 
        {
            if(userCheck(email_textField.getText()))
            {
                JOptionPane.showMessageDialog(null, "Email Id already exist", "Alert", JOptionPane.ERROR_MESSAGE);
                email_textField.setText("");
            }
            else
            {
            String insertuser = "INSERT INTO users( user_name,email_id,user_password) VALUES(?,?,?)";
            try {
               
                if(!EmailValidator(email_textField.getText().trim()))
                {
                    JOptionPane.showMessageDialog(null, "Please enter valid Email Id", "Alert", JOptionPane.ERROR_MESSAGE);
                    email_textField.setText("");
                }
                else
                {
                pst = con.prepareStatement(insertuser);
                pst.setString(1, user_textField.getText());
                pst.setString(2, email_textField.getText());
                pst.setString(3, password_textField.getText());
                pst.executeUpdate();
                user_textField.setText("");
                email_textField.setText("");
                password_textField.setText("");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        } 
    }
        else
        {
            JOptionPane.showMessageDialog(null, "Please enter correct user information", "Alert", JOptionPane.ERROR_MESSAGE);
        }

        Populate_Users();

    }//GEN-LAST:event_add_user_btnActionPerformed

    private void update_user_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_user_btnActionPerformed

        rowcount = user_table.getSelectedRowCount();
        if (rowcount > 1) {

            JOptionPane.showMessageDialog(null, "Please select single user to update at a time", "Alert", JOptionPane.ERROR_MESSAGE);

        } else {
            try {
                if(!EmailValidator(email_textField.getText().trim()))
                {
                    JOptionPane.showMessageDialog(null, "Please enter valid Email Id", "Alert", JOptionPane.ERROR_MESSAGE);
                    email_textField.setText("");
                }
                else
                {
                pst = con.prepareStatement("Update users set user_name=?,email_id=?,user_password=? where user_id=" + selectedUserid);
                pst.setString(1, user_textField.getText());
                pst.setString(2, email_textField.getText());
                pst.setString(3, password_textField.getText());
                pst.executeUpdate();
                user_textField.setText("");
                email_textField.setText("");
                password_textField.setText("");
                }
            } catch (Exception w) {
                JOptionPane.showMessageDialog(this, "Connection Error!");
            }
            Populate_Users();
        }
    }//GEN-LAST:event_update_user_btnActionPerformed

    private void Ls_TableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ls_TableMousePressed


    }//GEN-LAST:event_Ls_TableMousePressed

    private void subjects_tableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjects_tableMousePressed


    }//GEN-LAST:event_subjects_tableMousePressed

    private void user_tableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_tableMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_user_tableMousePressed

    private void Qstn_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Qstn_btnActionPerformed
        closeAllFrames();
        QuestionsFrame.setVisible(true);
        Populate_Questions();
        

    }//GEN-LAST:event_Qstn_btnActionPerformed

    private void questions_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_questions_tableMouseClicked
        rowcount = questions_table.getSelectedRowCount();
        int row = questions_table.getSelectedRow();
        if (rowcount > 1) {
            JOptionPane.showMessageDialog(null, "Please select a single question at a time", "Alert", JOptionPane.ERROR_MESSAGE);
        } else {

            DefaultTableModel model = (DefaultTableModel) questions_table.getModel();

            selectedQuestionId = model.getValueAt(row, 0).toString();
            String selectedQuestion = model.getValueAt(row, 2).toString();
            String option1 = model.getValueAt(row, 3).toString();
            String option2 = model.getValueAt(row, 4).toString();
            String option3 = model.getValueAt(row, 5).toString();
            String correctanswer = model.getValueAt(row, 6).toString();

            if (row >= 0) {
                qstn_txtArea.setText(selectedQuestion);
                opt1_txtField.setText(option1);
                opt2_txtField.setText(option2);
                opt3_txtField.setText(option3);
                if (correctanswer.equalsIgnoreCase("option1")) {
                    opt1_btn.setSelected(true);
                } else if (correctanswer.equalsIgnoreCase("option2")) {
                    opt2_btn.setSelected(true);
                } else {
                    opt3_btn.setSelected(true);

                }
            }

        }
    }//GEN-LAST:event_questions_tableMouseClicked

    private void Update_questBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_questBtnActionPerformed
        rowcount = questions_table.getSelectedRowCount();
        if (rowcount > 1) {
            JOptionPane.showMessageDialog(null, "Please select single question to update at a time", "Alert", JOptionPane.ERROR_MESSAGE);
        } else {
            String option = null;
            if (opt1_btn.isSelected()) {
                option = "option1";

            } else if (opt2_btn.isSelected()) {

                option = "option2";

            } else {

                option = "option3";
            }
            try {

                pst = con.prepareStatement("Update questions set question=?,option1=?,option2=?,option3=? ,answer=? where id=" + selectedQuestionId);
                pst.setString(1, qstn_txtArea.getText());
                pst.setString(2, opt1_txtField.getText());
                pst.setString(3, opt2_txtField.getText());
                pst.setString(4, opt3_txtField.getText());
                pst.setString(5, option);
                pst.executeUpdate();
                qstn_txtArea.setText("");
                opt1_txtField.setText("");
                opt2_txtField.setText("");
                opt3_txtField.setText("");
                buttonGroup1.clearSelection();

            } catch (Exception w) {
                JOptionPane.showMessageDialog(this, "Connection Error!");
            }

        }
    }//GEN-LAST:event_Update_questBtnActionPerformed

    private void add_ques_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_ques_btnActionPerformed
        String insertquestion = "INSERT INTO questions(question,option1,option2,option3,answer,lesson_id) VALUES(?,?,?,?,?,?)";
        String correctoption="";
        rowcount = questions_table.getSelectedRowCount();
        try {
            if(!qstn_txtArea.getText().equalsIgnoreCase("") && rowcount==0)
            {
            pst = con.prepareStatement(insertquestion);
            pst.setString(1, qstn_txtArea.getText());
            pst.setString(2, opt1_txtField.getText());
            pst.setString(3, opt2_txtField.getText());
            pst.setString(4, opt3_txtField.getText());
            if(opt1_btn.isSelected())
            {
                correctoption="option1";
            }
            else if(opt2_btn.isSelected())   
            {
                correctoption="option2";
            }  
            else
            {
                correctoption="option3";
            }
            pst.setString(5, correctoption);
            pst.setString(6, selectedlesson);
            
            if(buttonGroup1.getSelection()==null)
            {
                JOptionPane.showMessageDialog(null, "Please select an answer", "Alert", JOptionPane.ERROR_MESSAGE);
            }
            else
            {
            pst.execute();
            qstn_txtArea.setText("");
            opt1_txtField.setText("");
            opt2_txtField.setText("");
            opt3_txtField.setText("");
            buttonGroup1.clearSelection();
            
            }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please enter a new question", "Alert", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        Populate_Questions();
    }//GEN-LAST:event_add_ques_btnActionPerformed

    private void subject_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subject_menuMouseClicked
        closeAllFrames();
        if(login==true)
        {
            SubjectFrame.setVisible(true);
        }
        else
        {
           UserLogin.setVisible(true);
        }
        
    }//GEN-LAST:event_subject_menuMouseClicked

    private void userMngtMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userMngtMenuMouseClicked
        closeAllFrames();
        if(login==true)
        {
        UserManagementFrame.setVisible(true);
        }
        else
        {
           UserLogin.setVisible(true);
        }
       
    }//GEN-LAST:event_userMngtMenuMouseClicked

    private void back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_btnActionPerformed
        closeAllFrames();
        LessonsFrame.setVisible(true);
    }//GEN-LAST:event_back_btnActionPerformed

    private void qst_back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qst_back_btnActionPerformed
        closeAllFrames();
        LessonsFrame.setVisible(true);
    }//GEN-LAST:event_qst_back_btnActionPerformed

    private void qst_back_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_qst_back_btnMouseClicked
      
    }//GEN-LAST:event_qst_back_btnMouseClicked

    private void opt2_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opt2_btnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opt2_btnActionPerformed

    private void lesson_back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lesson_back_btnActionPerformed
        closeAllFrames();
        SubjectFrame.setVisible(true);
    }//GEN-LAST:event_lesson_back_btnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       String sql="Select * from users where user_name=? and user_password=?";

        try{
            pst=con.prepareStatement(sql);
            pst.setString(1,user_text.getText());
            pst.setString(2,pwd_field.getText());

            rs=pst.executeQuery();

            if(rs.next()){
                
            subject_menu.setEnabled(true);
            userMngtMenu.setEnabled(true);
            changePwd.setEnabled(true);
            logoutMenu.setEnabled(true);
            UserLogin.setVisible(false);
            JOptionPane.showMessageDialog(null,"Logged in successfully..");
            login=true;
            userLoginName=rs.getString("user_name");
                
            }
            else{
                
               JOptionPane.showMessageDialog(null,"Password or Username is incorrect"); 
               login=false;
            }
            user_text.setText("");
            pwd_field.setText("");
        }
        catch(SQLException e){
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void subject_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subject_menuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subject_menuActionPerformed

    private void changePwdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changePwdMouseClicked
         closeAllFrames();
        if(login==true)
        {
        ChangePasswordFrame.setVisible(true);
        }
        else
        {
           UserLogin.setVisible(true);
        }
    }//GEN-LAST:event_changePwdMouseClicked

    private void changePwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changePwdActionPerformed

    private void ChangePwdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangePwdButtonActionPerformed
         try {
                pst = con.prepareStatement("Update users set user_password=? where user_name='" + userLoginName+"'");
                System.out.println(userLoginName);
                if((pwdTxtField.getText()).equals(pwdConTxtField.getText()))
                {
                    pst.setString(1, pwdTxtField.getText());
                    pst.executeUpdate();
                    ChangePasswordFrame.setVisible(false);
                    JOptionPane.showMessageDialog(null, "Password Changed Successfully", "Alert", JOptionPane.ERROR_MESSAGE);
                }
                else
                {
                      ChangePasswordFrame.setVisible(true); 
                      JOptionPane.showMessageDialog(null, "Password and Confirm Password Mismatched", "Alert", JOptionPane.ERROR_MESSAGE);
                }
                pwdTxtField.setText("");
                pwdConTxtField.setText("");
                
            } catch (Exception w) {
                JOptionPane.showMessageDialog(this, "Connection Error!");
               
            }
    }//GEN-LAST:event_ChangePwdButtonActionPerformed

    private void logoutMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMenuMouseClicked
        closeAllFrames();
        disableMenus();
        login=false;
        UserLogin.setVisible(true);
        
    }//GEN-LAST:event_logoutMenuMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         
        String sql="Select email_id from users where user_name=?";
           String loggedUserEmailId="";
        try{
            if(user_text.getText().equalsIgnoreCase(""))
            {
                JOptionPane.showMessageDialog(null, "Please enter User Name", "Alert", JOptionPane.ERROR_MESSAGE);
            }
            else
            {
            pst=con.prepareStatement(sql);
            pst.setString(1,user_text.getText());
            rs=pst.executeQuery();
            while(rs.next())
            {
                loggedUserEmailId=rs.getString(1);
            }
            
            }
        }
        catch(SQLException e){
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame AddLessonFrame;
    private javax.swing.JTextArea AddNewSubject;
    private javax.swing.JLabel Add_Ls_Label;
    private javax.swing.JButton Add_Ls_Submit_Btn;
    private javax.swing.JTextArea Add_Ls_TextArea;
    private javax.swing.JLabel Add_ls_content_Label;
    private javax.swing.JTextArea Add_ls_content_textArea;
    private javax.swing.JInternalFrame ChangePasswordFrame;
    private javax.swing.JButton ChangePwdButton;
    private javax.swing.JInternalFrame LessonsContent;
    private javax.swing.JInternalFrame LessonsFrame;
    private javax.swing.JButton Ls_Add_Btn;
    private javax.swing.JButton Ls_Delete_Btn;
    private javax.swing.JButton Ls_Enter_Btn;
    private javax.swing.JLabel Ls_Label;
    private javax.swing.JTable Ls_Table;
    private javax.swing.JButton Qstn_btn;
    private javax.swing.JInternalFrame QuestionsFrame;
    private javax.swing.JInternalFrame SubjectAddFrame;
    private javax.swing.JInternalFrame SubjectFrame;
    private javax.swing.JButton Update;
    private javax.swing.JButton Update_questBtn;
    private javax.swing.JInternalFrame UserLogin;
    private javax.swing.JInternalFrame UserManagementFrame;
    private javax.swing.JButton abadd;
    private javax.swing.JButton abaddnewsubject;
    private javax.swing.JButton abdelete;
    private javax.swing.JButton abenter;
    private javax.swing.JLabel ablessonlabel;
    private javax.swing.JButton add_ques_btn;
    private javax.swing.JButton add_user_btn;
    private javax.swing.JButton back_btn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel changePasswordlabel;
    private javax.swing.JMenu changePwd;
    private javax.swing.JLabel confirmPwdField;
    private javax.swing.JButton delete_user_btn;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JLabel email_label;
    private javax.swing.JTextField email_textField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextArea lessonContent;
    private javax.swing.JButton lesson_back_btn;
    private javax.swing.JMenu logoutMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JRadioButton opt1_btn;
    private javax.swing.JTextField opt1_txtField;
    private javax.swing.JRadioButton opt2_btn;
    private javax.swing.JTextField opt2_txtField;
    private javax.swing.JRadioButton opt3_btn;
    private javax.swing.JTextField opt3_txtField;
    private javax.swing.JLabel password_label;
    private javax.swing.JTextField password_textField;
    private javax.swing.JTextField pwdConTxtField;
    private javax.swing.JTextField pwdTxtField;
    private javax.swing.JTextField pwd_field;
    private javax.swing.JLabel pwdfield;
    private javax.swing.JButton qst_back_btn;
    private javax.swing.JTextArea qstn_txtArea;
    private javax.swing.JTable questions_table;
    private javax.swing.JMenu subject_menu;
    private javax.swing.JTable subjects_table;
    private javax.swing.JButton update_user_btn;
    private javax.swing.JLabel us_mng_label;
    private javax.swing.JMenu userMngtMenu;
    private javax.swing.JTable user_table;
    private javax.swing.JTextField user_text;
    private javax.swing.JTextField user_textField;
    private javax.swing.JLabel username_label;
    private javax.swing.JLabel usr_label;
    private javax.swing.JLabel usr_name;
    private javax.swing.JLabel usr_pwd;
    // End of variables declaration//GEN-END:variables

}
